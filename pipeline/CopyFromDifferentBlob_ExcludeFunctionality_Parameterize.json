{
	"name": "CopyFromDifferentBlob_ExcludeFunctionality_Parameterize",
	"properties": {
		"activities": [
			{
				"name": "GetSqlTableDetail",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "\nselect ParamName,SourcePath,SourceFolder,SourceFileType,TargetPath,TargetFolder,TargetFileType,ExcludeFiles from [cglhdatabase].[dbo].[CGConfiguration] \nwhere ParamName='CopyJSON_BLOBtoBLOB'",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "AzureSqlTable3",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "For Each Record",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "GetSqlTableDetail",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('GetSqlTableDetail').output.value",
						"type": "Expression"
					},
					"isSequential": false,
					"activities": [
						{
							"name": "Get Metadata1",
							"type": "GetMetadata",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "GetMetadataOfBlobStorage",
									"type": "DatasetReference",
									"parameters": {
										"SourcePath": {
											"value": "@item().SourcePath",
											"type": "Expression"
										},
										"SourceFolder": {
											"value": "@item().SourceFolder",
											"type": "Expression"
										}
									}
								},
								"fieldList": [
									"childItems",
									"exists",
									"itemName",
									"itemType",
									"lastModified"
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							}
						},
						{
							"name": "Filter1",
							"type": "Filter",
							"dependsOn": [
								{
									"activity": "Get Metadata1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"items": {
									"value": "@activity('Get Metadata1').output.childItems",
									"type": "Expression"
								},
								"condition": {
									"value": "@not(contains(item().name,'sample_json1.json'))",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Execute Pipeline1",
							"type": "ExecutePipeline",
							"dependsOn": [
								{
									"activity": "Filter1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "NestedForEach",
									"type": "PipelineReference"
								},
								"waitOnCompletion": false,
								"parameters": {
									"SourceFolder": {
										"value": "@item().SourceFolder",
										"type": "Expression"
									},
									"SourceFile": {
										"value": "@activity('Filter1').output.Value",
										"type": "Expression"
									},
									"SourcePath": {
										"value": "@item().SourcePath",
										"type": "Expression"
									},
									"TargetPath": {
										"value": "@item().TargetPath",
										"type": "Expression"
									},
									"TargetFolder": {
										"value": "@item().TargetFolder",
										"type": "Expression"
									}
								}
							}
						}
					]
				}
			}
		],
		"folder": {
			"name": "Jyoti_Pipelines"
		},
		"annotations": [],
		"lastPublishTime": "2020-08-12T08:17:35Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}
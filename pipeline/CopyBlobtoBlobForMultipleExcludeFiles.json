{
	"name": "CopyBlobtoBlobForMultipleExcludeFiles",
	"properties": {
		"activities": [
			{
				"name": "IfConditionForMultipleExcludeFiles",
				"type": "IfCondition",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@not(empty(pipeline().parameters.ExcludeFileNames))",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "CopydataForeach",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "DelimitedTextSource",
									"storeSettings": {
										"type": "AzureBlobStorageReadSettings",
										"recursive": true,
										"wildcardFolderPath": {
											"value": "@pipeline().parameters.SourceFolder",
											"type": "Expression"
										},
										"wildcardFileName": {
											"value": "@pipeline().parameters.SourceFileType",
											"type": "Expression"
										},
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "DelimitedTextReadSettings"
									}
								},
								"sink": {
									"type": "DelimitedTextSink",
									"storeSettings": {
										"type": "AzureBlobStorageWriteSettings",
										"copyBehavior": "PreserveHierarchy"
									},
									"formatSettings": {
										"type": "DelimitedTextWriteSettings",
										"quoteAllText": true,
										"fileExtension": ""
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "CGLHSourceCSVType",
									"type": "DatasetReference",
									"parameters": {
										"SourcePath": {
											"value": "@pipeline().parameters.SourcePath",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "CGLHTargetCSVType",
									"type": "DatasetReference",
									"parameters": {
										"TargetPath": {
											"value": "@pipeline().parameters.TargetPath",
											"type": "Expression"
										},
										"TargetFolder": {
											"value": "@pipeline().parameters.TargetFolder",
											"type": "Expression"
										}
									}
								}
							]
						}
					],
					"ifTrueActivities": [
						{
							"name": "Get Metadata1ForAllFileType_CSV",
							"type": "GetMetadata",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "GetMetadataOfBlobStorage",
									"type": "DatasetReference",
									"parameters": {
										"SourcePath": {
											"value": "@pipeline().parameters.SourcePath",
											"type": "Expression"
										},
										"SourceFolder": {
											"value": "@pipeline().parameters.SourceFolder",
											"type": "Expression"
										}
									}
								},
								"fieldList": [
									"childItems"
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							}
						},
						{
							"name": "ToCopyAllFilesExceptExcludedFiles",
							"type": "ExecutePipeline",
							"dependsOn": [
								{
									"activity": "SplitExcludeFileWithCommas_CSV",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "pipelineWithTwoExecutionPipeline",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"SourceFileType": {
										"value": "@pipeline().parameters.SourceFileType",
										"type": "Expression"
									},
									"a1": {
										"value": "@array(activity('Get Metadata1ForAllFileType_CSV').output.childItems)",
										"type": "Expression"
									},
									"a2": {
										"value": "@array(variables('SplitExcludeFilesIntoArray'))",
										"type": "Expression"
									},
									"SourcePath": {
										"value": "@pipeline().parameters.SourcePath",
										"type": "Expression"
									},
									"SourceFolder": {
										"value": "@pipeline().parameters.SourceFolder",
										"type": "Expression"
									},
									"TargetPath": {
										"value": "@pipeline().parameters.TargetPath",
										"type": "Expression"
									},
									"TargetFolder": {
										"value": "@pipeline().parameters.TargetFolder",
										"type": "Expression"
									}
								}
							}
						},
						{
							"name": "SplitExcludeFileWithCommas_CSV",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Get Metadata1ForAllFileType_CSV",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "SplitExcludeFilesIntoArray",
								"value": {
									"value": "@split(pipeline().parameters.ExcludeFileNames,',')",
									"type": "Expression"
								}
							}
						}
					]
				}
			}
		],
		"parameters": {
			"ExcludeFileNames": {
				"type": "string"
			},
			"SourceFileType": {
				"type": "string"
			},
			"SourceFolder": {
				"type": "string"
			},
			"SourcePath": {
				"type": "string"
			},
			"TargetPath": {
				"type": "string"
			},
			"TargetFolder": {
				"type": "string"
			}
		},
		"variables": {
			"SplitExcludeFilesIntoArray": {
				"type": "Array"
			}
		},
		"folder": {
			"name": "Jyoti_Pipelines"
		},
		"annotations": [],
		"lastPublishTime": "2020-09-01T05:47:48Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}
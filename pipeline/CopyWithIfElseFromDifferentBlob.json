{
	"name": "CopyWithIfElseFromDifferentBlob",
	"properties": {
		"activities": [
			{
				"name": "GetSqlTableDetail",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "select ParamName,SourcePath,SourceFolder,SourceFileType,TargetPath,TargetFolder,TargetFileType,ExcludeFiles from [cglhdatabase].[dbo].[CGConfiguration] \nwhere ParamName='CopyJSON_BLOBtoBLOB'",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "AzureSqlTable3",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "For Each Record",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "GetSqlTableDetail",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('GetSqlTableDetail').output.value",
						"type": "Expression"
					},
					"isSequential": false,
					"activities": [
						{
							"name": "If Condition1",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "Set variable1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@not(empty(item().ExcludeFiles))",
									"type": "Expression"
								},
								"ifFalseActivities": [
									{
										"name": "CopydataForeach",
										"type": "Copy",
										"dependsOn": [],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "DelimitedTextSource",
												"storeSettings": {
													"type": "AzureBlobStorageReadSettings",
													"recursive": true,
													"wildcardFolderPath": {
														"value": "@item().SourceFolder",
														"type": "Expression"
													},
													"wildcardFileName": {
														"value": "@item().SourceFileType",
														"type": "Expression"
													},
													"enablePartitionDiscovery": false
												},
												"formatSettings": {
													"type": "DelimitedTextReadSettings"
												}
											},
											"sink": {
												"type": "DelimitedTextSink",
												"storeSettings": {
													"type": "AzureBlobStorageWriteSettings",
													"copyBehavior": "PreserveHierarchy"
												},
												"formatSettings": {
													"type": "DelimitedTextWriteSettings",
													"quoteAllText": true,
													"fileExtension": ""
												}
											},
											"enableStaging": false,
											"translator": {
												"type": "TabularTranslator",
												"typeConversion": true,
												"typeConversionSettings": {
													"allowDataTruncation": true,
													"treatBooleanAsNumber": false
												}
											}
										},
										"inputs": [
											{
												"referenceName": "CGLHSourceCSVType",
												"type": "DatasetReference",
												"parameters": {
													"SourcePath": {
														"value": "@item().SourcePath",
														"type": "Expression"
													}
												}
											}
										],
										"outputs": [
											{
												"referenceName": "CGLHTargetCSVType",
												"type": "DatasetReference",
												"parameters": {
													"TargetPath": {
														"value": "@item().TargetPath",
														"type": "Expression"
													},
													"TargetFolder": {
														"value": "@item().SourceFolder",
														"type": "Expression"
													}
												}
											}
										]
									}
								],
								"ifTrueActivities": [
									{
										"name": "Get Metadata1",
										"type": "GetMetadata",
										"dependsOn": [],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"dataset": {
												"referenceName": "GetMetadataOfBlobStorage",
												"type": "DatasetReference",
												"parameters": {
													"SourcePath": {
														"value": "@item().SourcePath",
														"type": "Expression"
													},
													"SourceFolder": {
														"value": "@item().SourceFolder",
														"type": "Expression"
													}
												}
											},
											"fieldList": [
												"childItems",
												"exists",
												"itemName",
												"itemType",
												"lastModified"
											],
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										}
									},
									{
										"name": "Filter1",
										"type": "Filter",
										"dependsOn": [
											{
												"activity": "Set variable1_copy1",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"userProperties": [],
										"typeProperties": {
											"items": {
												"value": "@activity('Get Metadata1').output.childItems",
												"type": "Expression"
											},
											"condition": {
												"value": "@and(not(contains(item().name,variables('ExcludeFiles'))),endswith(item().name,'.json'))",
												"type": "Expression"
											}
										}
									},
									{
										"name": "Execute Pipeline1",
										"type": "ExecutePipeline",
										"dependsOn": [
											{
												"activity": "Filter1",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"userProperties": [],
										"typeProperties": {
											"pipeline": {
												"referenceName": "NestedForEach",
												"type": "PipelineReference"
											},
											"waitOnCompletion": false,
											"parameters": {
												"SourceFolder": {
													"value": "@item().SourceFolder",
													"type": "Expression"
												},
												"SourceFile": {
													"value": "@activity('Filter1').output.Value",
													"type": "Expression"
												},
												"SourcePath": {
													"value": "@item().SourcePath",
													"type": "Expression"
												},
												"TargetPath": {
													"value": "@item().TargetPath",
													"type": "Expression"
												},
												"TargetFolder": {
													"value": "@item().TargetFolder",
													"type": "Expression"
												}
											}
										}
									},
									{
										"name": "Set variable1_copy1",
										"type": "SetVariable",
										"dependsOn": [
											{
												"activity": "Get Metadata1",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"userProperties": [],
										"typeProperties": {
											"variableName": "ExcludeFiles",
											"value": {
												"value": "@item().ExcludeFiles",
												"type": "Expression"
											}
										}
									}
								]
							}
						},
						{
							"name": "Set variable1",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "ExcludeFiles",
								"value": {
									"value": "@item().ExcludeFiles",
									"type": "Expression"
								}
							}
						}
					]
				}
			}
		],
		"variables": {
			"ExcludeFiles": {
				"type": "String"
			}
		},
		"folder": {
			"name": "Jyoti_Pipelines"
		},
		"annotations": [
			"source"
		],
		"lastPublishTime": "2020-08-14T11:15:48Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}
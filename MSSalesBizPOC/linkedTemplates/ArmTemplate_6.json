{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "MSSalesBizPOC"
		},
		"loadblobtotable_new_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'loadblobtotable_new'"
		},
		"loadblobtotable_new_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'loadblobtotable_new'"
		},
		"loadblobtotable_new_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "fareast\\v-prrahe"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/az_metadaa_folder')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "az_meta_csv_linkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "cglhsrc"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ID",
						"type": "String"
					},
					{
						"name": "Age",
						"type": "String"
					},
					{
						"name": "Experience",
						"type": "String"
					},
					{
						"name": "Income",
						"type": "String"
					},
					{
						"name": "ZIP_Code",
						"type": "String"
					},
					{
						"name": "Family",
						"type": "String"
					},
					{
						"name": "CCAvg",
						"type": "String"
					},
					{
						"name": "Education",
						"type": "String"
					},
					{
						"name": "Mortgage",
						"type": "String"
					},
					{
						"name": "Personal_Loan",
						"type": "String"
					},
					{
						"name": "Securities_Account",
						"type": "String"
					},
					{
						"name": "CD_Account",
						"type": "String"
					},
					{
						"name": "Online",
						"type": "String"
					},
					{
						"name": "CreditCard",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/az_sql_table')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Age",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Experience",
						"type": "int",
						"precision": 10
					},
					{
						"name": "income",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ZIP_Code",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Family",
						"type": "varchar"
					},
					{
						"name": "CCAvg",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Education",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Mortgage",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Personal_Loan",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Securities_Account",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CD_Account",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Online",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CreditCard",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Parameters"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/cglhlinkedservice_SourceBlob')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "cglhlinkedservice_SourceBlob",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "cglhcontainer"
					}
				},
				"schema": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/cglhlinkedservice_TargetBlob')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "cglhlinkedservice_Target_BLOB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "clghtarget"
					}
				},
				"schema": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/cglhsrc1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "cglhlinkedservice_Source_Blob",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"EnterSourcePath": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": {
							"value": "@dataset().EnterSourcePath",
							"type": "Expression"
						}
					}
				},
				"schema": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/cglhtable_onpremtoazure')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServercglh",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/cglhttgt1_dataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "cglhlinkedservice_Source_Blob",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"EnterTargetPath": {
						"type": "string"
					},
					"EnterTargetFolder": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@dataset().EnterTargetFolder",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().EnterTargetPath",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/loadblobtotable_new')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('loadblobtotable_new_connectionString')]",
					"userName": "[parameters('loadblobtotable_new_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('loadblobtotable_new_password')]"
					}
				},
				"connectVia": {
					"referenceName": "integrationRuntimepoc",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/1_metadata_test')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "File_metadata",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Az_meta_csv",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"columnCount",
								"contentMD5",
								"exists",
								"itemName",
								"itemType",
								"lastModified",
								"size",
								"structure"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					}
				],
				"folder": {
					"name": "Jyoti_Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2020-08-13T10:42:15Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/1adf_cglhpipeline_CopyData_BlobToBlob_unparametrized_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "cglhpipeline_CopyData_BlobToBlob_v2",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "cglhsrc//"
							},
							{
								"name": "Destination",
								"value": "cglhtgt//"
							}
						],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								}
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": false,
							"skipErrorFile": {
								"fileMissing": true
							},
							"validateDataConsistency": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_906",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_906",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "Jyoti_Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2020-08-13T10:42:15Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/2adf_cglhpipeline_CopyData_BlobToBlob_unparametrized_copy2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "cglhpipeline_CopyData_BlobToBlob_v2",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "cglhsrc//"
							},
							{
								"name": "Destination",
								"value": "cglhtgt//"
							}
						],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								}
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": false,
							"skipErrorFile": {
								"fileMissing": true
							},
							"validateDataConsistency": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_906",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_906",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "Jyoti_Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2020-08-13T10:42:15Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyBlobtoBlobForMultipleInclude')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetAllIncludeFilesthatNeedToBeCopied",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.a1",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "IfConditionToFilterFilestoCopy",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@not(contains(pipeline().parameters.a2,item().name))",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "GetListOfIncludeFiles",
												"type": "AppendVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "a3",
													"value": {
														"value": "@item().name",
														"type": "Expression"
													}
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "SetvariableWithFinalIncludeFileNames",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GetAllIncludeFilesthatNeedToBeCopied",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Final",
							"value": {
								"value": "@variables('a3')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEachTOCopyOnlySelectedIncludeFiles",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "SetvariableWithFinalIncludeFileNames",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('a3')",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "CopyFilteredFiles",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"wildcardFolderPath": {
													"value": "@pipeline().parameters.SourceFolder",
													"type": "Expression"
												},
												"wildcardFileName": {
													"value": "@item()",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings",
												"copyBehavior": "PreserveHierarchy"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ""
											}
										},
										"enableStaging": false,
										"parallelCopies": 50,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "CGLH_SourceCopyDataWithExcludeFunction",
											"type": "DatasetReference",
											"parameters": {
												"SourcePath": {
													"value": "@pipeline().parameters.SourcePath",
													"type": "Expression"
												},
												"SourceFolder": {
													"value": "@pipeline().parameters.SourceFolder",
													"type": "Expression"
												},
												"SourceFile": {
													"value": "@item()",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "CGLH_TargetExcludeFunction",
											"type": "DatasetReference",
											"parameters": {
												"TargetPath": {
													"value": "@pipeline().parameters.TargetPath",
													"type": "Expression"
												},
												"TargetFolder": {
													"value": "@pipeline().parameters.TargetFolder",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"a1": {
						"type": "array",
						"defaultValue": []
					},
					"a2": {
						"type": "array",
						"defaultValue": []
					},
					"SourcePath": {
						"type": "string",
						"defaultValue": "NULL"
					},
					"SourceFolder": {
						"type": "string",
						"defaultValue": "NULL"
					},
					"TargetPath": {
						"type": "string",
						"defaultValue": "NULL"
					},
					"TargetFolder": {
						"type": "string",
						"defaultValue": "NULL"
					}
				},
				"variables": {
					"a3": {
						"type": "Array"
					},
					"Final": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "Jyoti_Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2020-09-01T05:47:48Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyFromDifferentBlobs_parametarize')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetSqlTableDetail",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select ParamName,SourcePath,SourceFolder,SourceFileType,TargetPath,TargetFolder,TargetFileType from [cglhdatabase].[dbo].[CGConfiguration] \nwhere ParamName='CopyJSON_BLOBtoBLOB'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlTable3",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "For Each Record",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GetSqlTableDetail",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetSqlTableDetail').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "CopydataForeach",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"wildcardFolderPath": {
													"value": "@item().SourceFolder",
													"type": "Expression"
												},
												"wildcardFileName": {
													"value": "@item().SourceFileType",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings",
												"copyBehavior": "PreserveHierarchy"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ""
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "CGLHSourceCSVType",
											"type": "DatasetReference",
											"parameters": {
												"SourcePath": {
													"value": "@item().SourcePath",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "CGLHTargetCSVType",
											"type": "DatasetReference",
											"parameters": {
												"TargetPath": {
													"value": "@item().TargetPath",
													"type": "Expression"
												},
												"TargetFolder": {
													"value": "@item().SourceFolder",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"folder": {
					"name": "Jyoti_Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2020-08-11T06:07:40Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_1vt')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_1vt",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "cglhcontainer//dbo.FactSalesQuota.json"
							},
							{
								"name": "Destination",
								"value": "cglhcontainerpre//"
							}
						],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['SalesQuotaKey']"
										},
										"sink": {
											"path": "$['SalesQuotaKey']"
										}
									},
									{
										"source": {
											"path": "$['EmployeeKey']"
										},
										"sink": {
											"path": "$['EmployeeKey']"
										}
									},
									{
										"source": {
											"path": "$['DateKey']"
										},
										"sink": {
											"path": "$['DateKey']"
										}
									},
									{
										"source": {
											"path": "$['CalendarYear']"
										},
										"sink": {
											"path": "$['CalendarYear']"
										}
									},
									{
										"source": {
											"path": "$['CalendarQuarter']"
										},
										"sink": {
											"path": "$['CalendarQuarter']"
										}
									},
									{
										"source": {
											"path": "$['SalesAmountQuota']"
										},
										"sink": {
											"path": "$['SalesAmountQuota']"
										}
									},
									{
										"source": {
											"path": "$['Date']"
										},
										"sink": {
											"path": "$['Date']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_1vt",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_1vt",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-08-18T14:35:24Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_test')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_i1h",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "dbo.DimAccount"
							},
							{
								"name": "Destination",
								"value": "cglhcontainer//"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"validateDataConsistency": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_i1h",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_i1h",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-07-30T05:38:49Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_toSql')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_gwe",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "cglhsrc/2020/07/01/"
							},
							{
								"name": "Destination",
								"value": ".Azure Blob Storage file"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings",
									"skipLineCount": 0
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"tableOption": "autoCreate"
							},
							"enableStaging": false,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "contentVersion",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "contentVersion",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Column_Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Column_Name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Source_Value",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Source_Value",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Target_Value",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Target_Value",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Comments",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Comments",
											"type": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_gwe",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_gwe",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-08-17T12:18:51Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DumptoSqlParallel')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DelimitedText11111",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"itemName",
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filter1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childItems",
								"type": "Expression"
							},
							"batchCount": 50,
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ParquetSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"wildcardFolderPath": "2020/ParquetToLoadInSQLTable_v1",
												"wildcardFileName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"tableOption": "autoCreate"
										},
										"enableStaging": false,
										"parallelCopies": 256,
										"dataIntegrationUnits": 256,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "Dataset_ForLoadingParquetFromCGLHSRCtoGLHDB",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "AzureSqlDumpDB",
											"type": "DatasetReference",
											"parameters": {
												"TargetTableName": {
													"value": "test2",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Filter1",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(activity('Get Metadata1').output.childItems,'parquet')",
								"type": "Expression"
							}
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-08-23T18:29:23Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ForEveryCSVTypeExcludeFiles')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetAllCSVFilesthatNeedToBeCopied",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.a1",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@or(contains(pipeline().parameters.a2,item().name),not(endswith(item().name,'csv')))",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Append variable1",
												"type": "AppendVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "a3",
													"value": {
														"value": "@item().name",
														"type": "Expression"
													}
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GetAllCSVFilesthatNeedToBeCopied",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ExcludeFileNames",
							"value": {
								"value": "@array(variables('a3'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach2",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('ExcludeFileNames')",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "CopyFilteredFiles",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"wildcardFolderPath": {
													"value": "@pipeline().parameters.SourceFolder",
													"type": "Expression"
												},
												"wildcardFileName": {
													"value": "@item()",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings",
												"copyBehavior": "PreserveHierarchy"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ""
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "CGLH_SourceCopyDataWithExcludeFunction",
											"type": "DatasetReference",
											"parameters": {
												"SourcePath": {
													"value": "@pipeline().parameters.SourcePath",
													"type": "Expression"
												},
												"SourceFolder": {
													"value": "@pipeline().parameters.SourceFolder",
													"type": "Expression"
												},
												"SourceFile": {
													"value": "@item()",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "CGLH_TargetExcludeFunction",
											"type": "DatasetReference",
											"parameters": {
												"TargetPath": {
													"value": "@pipeline().parameters.TargetPath",
													"type": "Expression"
												},
												"TargetFolder": {
													"value": "@pipeline().parameters.TargetFolder",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"a1": {
						"type": "array",
						"defaultValue": []
					},
					"a2": {
						"type": "array",
						"defaultValue": []
					},
					"SourcePath": {
						"type": "string",
						"defaultValue": "NULL"
					},
					"SourceFolder": {
						"type": "string",
						"defaultValue": "NULL"
					},
					"TargetPath": {
						"type": "string",
						"defaultValue": "NULL"
					},
					"TargetFolder": {
						"type": "string",
						"defaultValue": "NULL"
					}
				},
				"variables": {
					"a3": {
						"type": "Array"
					},
					"final": {
						"type": "Array"
					},
					"ExcludeFileNames": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "Jyoti_Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2020-08-19T06:16:04Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ForEveryJsonTypeExcludeFiles')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetAllJsonFilesthatNeedToBeCopied",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.a1",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@or(contains(pipeline().parameters.a2,item().name),not(endswith(item().name,'json')))",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Append variable1",
												"type": "AppendVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "a3",
													"value": {
														"value": "@item().name",
														"type": "Expression"
													}
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GetAllJsonFilesthatNeedToBeCopied",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ExcludeFileNames",
							"value": {
								"value": "@array(variables('a3'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach2",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('ExcludeFileNames')",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "CopyFilteredFiles",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"wildcardFolderPath": {
													"value": "@pipeline().parameters.SourceFolder",
													"type": "Expression"
												},
												"wildcardFileName": {
													"value": "@item()",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings",
												"copyBehavior": "PreserveHierarchy"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ""
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "CGLH_SourceCopyDataWithExcludeFunction",
											"type": "DatasetReference",
											"parameters": {
												"SourcePath": {
													"value": "@pipeline().parameters.SourcePath",
													"type": "Expression"
												},
												"SourceFolder": {
													"value": "@pipeline().parameters.SourceFolder",
													"type": "Expression"
												},
												"SourceFile": {
													"value": "@item()",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "CGLH_TargetExcludeFunction",
											"type": "DatasetReference",
											"parameters": {
												"TargetPath": {
													"value": "@pipeline().parameters.TargetPath",
													"type": "Expression"
												},
												"TargetFolder": {
													"value": "@pipeline().parameters.TargetFolder",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"a1": {
						"type": "array",
						"defaultValue": []
					},
					"a2": {
						"type": "array",
						"defaultValue": []
					},
					"SourcePath": {
						"type": "string",
						"defaultValue": "NULL"
					},
					"SourceFolder": {
						"type": "string",
						"defaultValue": "NULL"
					},
					"TargetPath": {
						"type": "string",
						"defaultValue": "NULL"
					},
					"TargetFolder": {
						"type": "string",
						"defaultValue": "NULL"
					}
				},
				"variables": {
					"a3": {
						"type": "Array"
					},
					"final": {
						"type": "Array"
					},
					"ExcludeFileNames": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "Jyoti_Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2020-08-19T06:28:46Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ForEveryParquetTypeExcludeFiles')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetAllParquetFilesthatNeedToBeCopied",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.a1",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@or(contains(pipeline().parameters.a2,item().name),not(endswith(item().name,'parquet')))",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Append variable1",
												"type": "AppendVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "a3",
													"value": {
														"value": "@item().name",
														"type": "Expression"
													}
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GetAllParquetFilesthatNeedToBeCopied",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ExcludeFileNames",
							"value": {
								"value": "@array(variables('a3'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach2",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('ExcludeFileNames')",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "CopyFilteredFiles",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"wildcardFolderPath": {
													"value": "@pipeline().parameters.SourceFolder",
													"type": "Expression"
												},
												"wildcardFileName": {
													"value": "@item()",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings",
												"copyBehavior": "PreserveHierarchy"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ""
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "CGLH_SourceCopyDataWithExcludeFunction",
											"type": "DatasetReference",
											"parameters": {
												"SourcePath": {
													"value": "@pipeline().parameters.SourcePath",
													"type": "Expression"
												},
												"SourceFolder": {
													"value": "@pipeline().parameters.SourceFolder",
													"type": "Expression"
												},
												"SourceFile": {
													"value": "@item()",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "CGLH_TargetExcludeFunction",
											"type": "DatasetReference",
											"parameters": {
												"TargetPath": {
													"value": "@pipeline().parameters.TargetPath",
													"type": "Expression"
												},
												"TargetFolder": {
													"value": "@pipeline().parameters.TargetFolder",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"a1": {
						"type": "array",
						"defaultValue": []
					},
					"a2": {
						"type": "array",
						"defaultValue": []
					},
					"SourcePath": {
						"type": "string",
						"defaultValue": "NULL"
					},
					"SourceFolder": {
						"type": "string",
						"defaultValue": "NULL"
					},
					"TargetPath": {
						"type": "string",
						"defaultValue": "NULL"
					},
					"TargetFolder": {
						"type": "string",
						"defaultValue": "NULL"
					}
				},
				"variables": {
					"a3": {
						"type": "Array"
					},
					"final": {
						"type": "Array"
					},
					"ExcludeFileNames": {
						"type": "Array"
					}
				},
				"annotations": [],
				"lastPublishTime": "2020-08-19T06:16:04Z"
			},
			"dependsOn": []
		}
	]
}
{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "MSSalesBizPOC"
		},
		"AZ_CGLHDB_LinkedService_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AZ_CGLHDB_LinkedService'"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
		},
		"AzureBlobStorage2_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage2'"
		},
		"AzureBlobStorage_csvtosql_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage_csvtosql'"
		},
		"AzureBlobStorage_pre_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage_pre'"
		},
		"AzureDatabricks1_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'AzureDatabricks1'"
		},
		"AzureSourceBlob_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureSourceBlob'"
		},
		"AzureSqlDatabase_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase'"
		},
		"AzureSqlDatabase_csvtosql_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase_csvtosql'"
		},
		"AzureSqlDatabase_forBlobdump_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase_forBlobdump'"
		},
		"AzureSqlDumpDB_LS_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDumpDB_LS'"
		},
		"AzureStorageLinkedService_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureStorageLinkedService'"
		},
		"SqlServercglh_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SqlServercglh'"
		},
		"SqlServercglh_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'SqlServercglh'"
		},
		"az_meta_csv_linkedService_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'az_meta_csv_linkedService'"
		},
		"az_sql_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'az_sql'"
		},
		"blob_pre_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'blob_pre'"
		},
		"cglhADFtoDatabricks_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'cglhADFtoDatabricks'"
		},
		"cglhSourceLocation_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'cglhSourceLocation'"
		},
		"cglhTargetLocation_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'cglhTargetLocation'"
		},
		"cglh_adf_to_blob_linkedservice_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'cglh_adf_to_blob_linkedservice'"
		},
		"cglh_azuresqldatabase_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'cglh_azuresqldatabase'"
		},
		"cglh_sqlserverpost_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'cglh_sqlserverpost'"
		},
		"cglh_sqlserverpost_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'cglh_sqlserverpost'"
		},
		"cglh_src_adf_pipeline_linkedservice_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'cglh_src_adf_pipeline_linkedservice'"
		},
		"cglh_trg_adf_pipeline_linkedservice_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'cglh_trg_adf_pipeline_linkedservice'"
		},
		"cglhlinkedservice_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'cglhlinkedservice'"
		},
		"cglhlinkedservice_SourceBlob_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'cglhlinkedservice_SourceBlob'"
		},
		"cglhlinkedservice_Source_Blob_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'cglhlinkedservice_Source_Blob'"
		},
		"cglhlinkedservice_TargetBlob_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'cglhlinkedservice_TargetBlob'"
		},
		"cglhlinkedservice_Target_BLOB_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'cglhlinkedservice_Target_BLOB'"
		},
		"cglhlinkedservice_json_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'cglhlinkedservice_json'"
		},
		"cglhlinkedservice_json3_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'cglhlinkedservice_json3'"
		},
		"cglhlinkedservicenew_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'cglhlinkedservicenew'"
		},
		"linkedservice_source_blob_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'linkedservice_source_blob'"
		},
		"loadblobtosql_blobnew_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'loadblobtosql_blobnew'"
		},
		"loadblobtotable_databricks_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'loadblobtotable_databricks'"
		},
		"loadblobtotable_new_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'loadblobtotable_new'"
		},
		"loadblobtotable_new_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'loadblobtotable_new'"
		},
		"onpremtosql_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'onpremtosql'"
		},
		"prepostdatabricks_linkedservice_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'prepostdatabricks_linkedservice'"
		},
		"AzureSourceBlob_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://cglhstorageaccount.dfs.core.windows.net"
		},
		"SqlServercglh_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "fareast\\v-prrahe"
		},
		"cglh_sqlserverpost_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "fareast\\v-prrahe"
		},
		"loadblobtotable_new_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "fareast\\v-prrahe"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/1_metadata_test')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "File_metadata",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Az_meta_csv",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"columnCount",
								"contentMD5",
								"exists",
								"itemName",
								"itemType",
								"lastModified",
								"size",
								"structure"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					}
				],
				"folder": {
					"name": "Jyoti_Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2020-08-13T10:42:15Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Az_meta_csv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1adf_cglhpipeline_CopyData_BlobToBlob_unparametrized_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "cglhpipeline_CopyData_BlobToBlob_v2",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "cglhsrc//"
							},
							{
								"name": "Destination",
								"value": "cglhtgt//"
							}
						],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								}
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": false,
							"skipErrorFile": {
								"fileMissing": true
							},
							"validateDataConsistency": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_906",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_906",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "Jyoti_Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2020-08-13T10:42:15Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_906')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_906')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2adf_cglhpipeline_CopyData_BlobToBlob_unparametrized_copy2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "cglhpipeline_CopyData_BlobToBlob_v2",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "cglhsrc//"
							},
							{
								"name": "Destination",
								"value": "cglhtgt//"
							}
						],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								}
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": false,
							"skipErrorFile": {
								"fileMissing": true
							},
							"validateDataConsistency": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_906",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_906",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "Jyoti_Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2020-08-13T10:42:15Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_906')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_906')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Compare_JsontoJson_Parameterize')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Compare_JsontoJson_Parameterize",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/jyoti.srivastava@annik.com/JSON_JSON_NOTE"
						},
						"linkedServiceName": {
							"referenceName": "cglhADFtoDatabricks",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "Jyoti_Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2020-08-10T05:00:37Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/cglhADFtoDatabricks')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyBlobtoBlobForMultipleExcludeFiles')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "IfConditionForMultipleExcludeFiles",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(empty(pipeline().parameters.ExcludeFileNames))",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "CopydataForeach",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"wildcardFolderPath": {
													"value": "@pipeline().parameters.SourceFolder",
													"type": "Expression"
												},
												"wildcardFileName": {
													"value": "@pipeline().parameters.SourceFileType",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings",
												"copyBehavior": "PreserveHierarchy"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ""
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "CGLHSourceCSVType",
											"type": "DatasetReference",
											"parameters": {
												"SourcePath": {
													"value": "@pipeline().parameters.SourcePath",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "CGLHTargetCSVType",
											"type": "DatasetReference",
											"parameters": {
												"TargetPath": {
													"value": "@pipeline().parameters.TargetPath",
													"type": "Expression"
												},
												"TargetFolder": {
													"value": "@pipeline().parameters.TargetFolder",
													"type": "Expression"
												}
											}
										}
									]
								}
							],
							"ifTrueActivities": [
								{
									"name": "Get Metadata1ForAllFileType_CSV",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "GetMetadataOfBlobStorage",
											"type": "DatasetReference",
											"parameters": {
												"SourcePath": {
													"value": "@pipeline().parameters.SourcePath",
													"type": "Expression"
												},
												"SourceFolder": {
													"value": "@pipeline().parameters.SourceFolder",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"childItems"
										],
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true
										},
										"formatSettings": {
											"type": "DelimitedTextReadSettings"
										}
									}
								},
								{
									"name": "ToCopyAllFilesExceptExcludedFiles",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "SplitExcludeFileWithCommas_CSV",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pipelineWithTwoExecutionPipeline",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SourceFileType": {
												"value": "@pipeline().parameters.SourceFileType",
												"type": "Expression"
											},
											"a1": {
												"value": "@array(activity('Get Metadata1ForAllFileType_CSV').output.childItems)",
												"type": "Expression"
											},
											"a2": {
												"value": "@array(variables('SplitExcludeFilesIntoArray'))",
												"type": "Expression"
											},
											"SourcePath": {
												"value": "@pipeline().parameters.SourcePath",
												"type": "Expression"
											},
											"SourceFolder": {
												"value": "@pipeline().parameters.SourceFolder",
												"type": "Expression"
											},
											"TargetPath": {
												"value": "@pipeline().parameters.TargetPath",
												"type": "Expression"
											},
											"TargetFolder": {
												"value": "@pipeline().parameters.TargetFolder",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "SplitExcludeFileWithCommas_CSV",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Get Metadata1ForAllFileType_CSV",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "SplitExcludeFilesIntoArray",
										"value": {
											"value": "@split(pipeline().parameters.ExcludeFileNames,',')",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"ExcludeFileNames": {
						"type": "string"
					},
					"SourceFileType": {
						"type": "string"
					},
					"SourceFolder": {
						"type": "string"
					},
					"SourcePath": {
						"type": "string"
					},
					"TargetPath": {
						"type": "string"
					},
					"TargetFolder": {
						"type": "string"
					}
				},
				"variables": {
					"SplitExcludeFilesIntoArray": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "Jyoti_Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2020-09-01T05:47:48Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CGLHSourceCSVType')]",
				"[concat(variables('factoryId'), '/datasets/CGLHTargetCSVType')]",
				"[concat(variables('factoryId'), '/datasets/GetMetadataOfBlobStorage')]",
				"[concat(variables('factoryId'), '/pipelines/pipelineWithTwoExecutionPipeline')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyBlobtoBlobForMultipleInclude')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetAllIncludeFilesthatNeedToBeCopied",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.a1",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "IfConditionToFilterFilestoCopy",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@not(contains(pipeline().parameters.a2,item().name))",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "GetListOfIncludeFiles",
												"type": "AppendVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "a3",
													"value": {
														"value": "@item().name",
														"type": "Expression"
													}
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "SetvariableWithFinalIncludeFileNames",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GetAllIncludeFilesthatNeedToBeCopied",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Final",
							"value": {
								"value": "@variables('a3')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEachTOCopyOnlySelectedIncludeFiles",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "SetvariableWithFinalIncludeFileNames",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('a3')",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "CopyFilteredFiles",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"wildcardFolderPath": {
													"value": "@pipeline().parameters.SourceFolder",
													"type": "Expression"
												},
												"wildcardFileName": {
													"value": "@item()",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings",
												"copyBehavior": "PreserveHierarchy"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ""
											}
										},
										"enableStaging": false,
										"parallelCopies": 50,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "CGLH_SourceCopyDataWithExcludeFunction",
											"type": "DatasetReference",
											"parameters": {
												"SourcePath": {
													"value": "@pipeline().parameters.SourcePath",
													"type": "Expression"
												},
												"SourceFolder": {
													"value": "@pipeline().parameters.SourceFolder",
													"type": "Expression"
												},
												"SourceFile": {
													"value": "@item()",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "CGLH_TargetExcludeFunction",
											"type": "DatasetReference",
											"parameters": {
												"TargetPath": {
													"value": "@pipeline().parameters.TargetPath",
													"type": "Expression"
												},
												"TargetFolder": {
													"value": "@pipeline().parameters.TargetFolder",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"a1": {
						"type": "array",
						"defaultValue": []
					},
					"a2": {
						"type": "array",
						"defaultValue": []
					},
					"SourcePath": {
						"type": "string",
						"defaultValue": "NULL"
					},
					"SourceFolder": {
						"type": "string",
						"defaultValue": "NULL"
					},
					"TargetPath": {
						"type": "string",
						"defaultValue": "NULL"
					},
					"TargetFolder": {
						"type": "string",
						"defaultValue": "NULL"
					}
				},
				"variables": {
					"a3": {
						"type": "Array"
					},
					"Final": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "Jyoti_Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2020-09-01T05:47:48Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CGLH_SourceCopyDataWithExcludeFunction')]",
				"[concat(variables('factoryId'), '/datasets/CGLH_TargetExcludeFunction')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyBlobtoBlobWithComparision')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetSqlTableDetail",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select a.ParamName,a.SourcePath,a.SourceFolder,a.SourceFileType_New as SourceFileType,a.TargetPath,a.TargetFolder,a.TargetFileType,a.ExcludeFiles\n,a.ActiveFlag, a.Priority from (\nselect ParamName,SourcePath,SourceFolder,SourceFileType,TargetPath,TargetFolder,TargetFileType,ExcludeFiles, ActiveFlag,Priority, CASE \n\t\t\t\tWHEN (SourceFileType is NULL) THEN '*'\n\t\t\t\tELSE SourceFileType\n\t\t\t\tend as SourceFileType_New \n\t\t\t\tfrom [cglhdatabase].[dbo].[CGConfiguration] \nwhere GroupName='CopyFiles' and ActiveFlag = 'Y') a order by Priority",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlTable3",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "For Each Record1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GetSqlTableDetail",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetSqlTableDetail').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "If Condition2",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@contains(item().SourceFileType,'*')",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "IncludeFileNames",
												"type": "SetVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "IncludeFileNames",
													"value": {
														"value": "@split(item().SourceFileType,',')",
														"type": "Expression"
													}
												}
											},
											{
												"name": "ExecutePipelineforGettingNameOfMultipleInclude",
												"type": "ExecutePipeline",
												"dependsOn": [
													{
														"activity": "IncludeFileNames",
														"dependencyConditions": [
															"Succeeded"
														]
													},
													{
														"activity": "GetMetadataOfSourceFolder",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "CopyBlobtoBlobForMultipleInclude",
														"type": "PipelineReference"
													},
													"waitOnCompletion": true,
													"parameters": {
														"a1": {
															"value": "@array(activity('GetMetadataOfSourceFolder').output.childItems)",
															"type": "Expression"
														},
														"a2": {
															"value": "@array(variables('IncludeFileNames'))",
															"type": "Expression"
														},
														"SourcePath": {
															"value": "@item().SourcePath",
															"type": "Expression"
														},
														"SourceFolder": {
															"value": "@item().SourceFolder",
															"type": "Expression"
														},
														"TargetPath": {
															"value": "@item().TargetPath",
															"type": "Expression"
														},
														"TargetFolder": {
															"value": "@item().TargetFolder",
															"type": "Expression"
														}
													}
												}
											},
											{
												"name": "GetMetadataOfSourceFolder",
												"type": "GetMetadata",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataset": {
														"referenceName": "GetMetadataOfBlobStorage",
														"type": "DatasetReference",
														"parameters": {
															"SourcePath": {
																"value": "@item().SourcePath",
																"type": "Expression"
															},
															"SourceFolder": {
																"value": "@item().SourceFolder",
																"type": "Expression"
															}
														}
													},
													"fieldList": [
														"childItems"
													],
													"storeSettings": {
														"type": "AzureBlobStorageReadSettings",
														"recursive": true
													},
													"formatSettings": {
														"type": "DelimitedTextReadSettings"
													}
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "SetVariableForExclueFile",
												"type": "SetVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "ExcludeFiles",
													"value": {
														"value": "@item().ExcludeFiles",
														"type": "Expression"
													}
												}
											},
											{
												"name": "Execute Pipeline4",
												"type": "ExecutePipeline",
												"dependsOn": [
													{
														"activity": "SetVariableForExclueFile",
														"dependencyConditions": [
															"Succeeded"
														]
													},
													{
														"activity": "SetSourceFileType",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "CopyBlobtoBlobForMultipleExcludeFiles",
														"type": "PipelineReference"
													},
													"waitOnCompletion": true,
													"parameters": {
														"ExcludeFileNames": {
															"value": "@variables('ExcludeFiles')",
															"type": "Expression"
														},
														"SourceFileType": {
															"value": "@variables('SourceFileType')",
															"type": "Expression"
														},
														"SourceFolder": {
															"value": "@item().SourceFolder",
															"type": "Expression"
														},
														"SourcePath": {
															"value": "@item().SourcePath",
															"type": "Expression"
														},
														"TargetPath": {
															"value": "@item().TargetPath",
															"type": "Expression"
														},
														"TargetFolder": {
															"value": "@item().TargetFolder",
															"type": "Expression"
														}
													}
												}
											},
											{
												"name": "SetSourceFileType",
												"type": "SetVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "SourceFileType",
													"value": {
														"value": "@item().SourceFileType",
														"type": "Expression"
													}
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "GetSqlTableDetailForFileComparision",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "For Each Record1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select a.ParamName,a.SourcePath,a.SourceFolder,a.SourceFileType_New as SourceFileType,a.TargetPath,a.TargetFolder,a.TargetFileType,a.ResultSourcePath,a.ResultSourceFolder,a.ResultFileType\n,a.ActiveFlag, a.Priority,a.ColstoCompare,a.KeyColumns  from (\nselect ParamName,SourcePath,SourceFolder,SourceFileType,TargetPath,TargetFolder,TargetFileType,ResultSourcePath,ResultSourceFolder,ResultFileType, ActiveFlag,Priority,ColstoCompare,KeyColumns, CASE \n\t\t\t\tWHEN (SourceFileType is NULL) THEN '*'\n\t\t\t\tELSE SourceFileType\n\t\t\t\tend as SourceFileType_New \n\t\t\t\tfrom [cglhdatabase].[dbo].[CGConfiguration] \nwhere GroupName='CompareFiles' and ActiveFlag = 'Y') a order by Priority",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlTable3",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GetSqlTableDetailForFileComparision",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetSqlTableDetailForFileComparision').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Compare_File_Parameterize_copy1",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Users/jyoti.srivastava@annik.com/CopyBlobtoBlobWithComparision",
										"baseParameters": {
											"SourcePath": {
												"value": "@item().SourcePath",
												"type": "Expression"
											},
											"SourceFolder": {
												"value": "@item().SourceFolder",
												"type": "Expression"
											},
											"SourceFileType": {
												"value": "@item().SourceFileType",
												"type": "Expression"
											},
											"TargetPath": {
												"value": "@item().TargetPath",
												"type": "Expression"
											},
											"TargetFolder": {
												"value": "@item().TargetFolder",
												"type": "Expression"
											},
											"ResultSourcePath": {
												"value": "@item().ResultSourcePath",
												"type": "Expression"
											},
											"ResultSourceFolder": {
												"value": "@item().ResultSourceFolder",
												"type": "Expression"
											},
											"ResultSourceFileType": {
												"value": "@item().ResultFileType",
												"type": "Expression"
											},
											"ColstoCompare": {
												"value": "@item().ColstoCompare",
												"type": "Expression"
											},
											"KeyCols": {
												"value": "@item().KeyColumns",
												"type": "Expression"
											},
											"TargetFileType": {
												"value": "@item().TargetFileType",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "cglhADFtoDatabricks",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"variables": {
					"ExcludeFiles": {
						"type": "String"
					},
					"CovertMetaDataToArray": {
						"type": "Array"
					},
					"FileTypeFinal": {
						"type": "Array"
					},
					"SplitExcludeFilesIntoArray": {
						"type": "Array"
					},
					"LoopThroughExcludeFilesVariable": {
						"type": "Array"
					},
					"IncludeFileNames": {
						"type": "Array",
						"defaultValue": []
					},
					"SourceFileType": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Jyoti_Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2020-09-09T16:22:47Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable3')]",
				"[concat(variables('factoryId'), '/linkedServices/cglhADFtoDatabricks')]",
				"[concat(variables('factoryId'), '/pipelines/CopyBlobtoBlobForMultipleInclude')]",
				"[concat(variables('factoryId'), '/datasets/GetMetadataOfBlobStorage')]",
				"[concat(variables('factoryId'), '/pipelines/CopyBlobtoBlobForMultipleExcludeFiles')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyFromDifferentBlobWithExcludeFile_v2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetSqlTableDetail",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select a.ParamName,a.SourcePath,a.SourceFolder,a.SourceFileType_New as SourceFileType,a.TargetPath,a.TargetFolder,a.TargetFileType,a.ExcludeFiles,a.ActiveFlag from (\nselect ParamName,SourcePath,SourceFolder,SourceFileType,TargetPath,TargetFolder,TargetFileType,ExcludeFiles, ActiveFlag, CASE \n\t\t\t\tWHEN (SourceFileType is NULL) THEN '*'\n\t\t\t\tELSE SourceFileType\n\t\t\t\tend as SourceFileType_New \n\t\t\t\tfrom [cglhdatabase].[dbo].[CGConfiguration] \nwhere GroupName='CopyFiles' and ActiveFlag = 'Y') a",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlTable3",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "For Each Record",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GetSqlTableDetail",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetSqlTableDetail').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "SetVariableForExclueFile",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@not(empty(item().ExcludeFiles))",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "CopydataForeach",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": true,
															"wildcardFolderPath": {
																"value": "@item().SourceFolder",
																"type": "Expression"
															},
															"wildcardFileName": {
																"value": "@item().SourceFileType",
																"type": "Expression"
															},
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														}
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureBlobStorageWriteSettings",
															"copyBehavior": "PreserveHierarchy"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ""
														}
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "CGLHSourceCSVType",
														"type": "DatasetReference",
														"parameters": {
															"SourcePath": {
																"value": "@item().SourcePath",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "CGLHTargetCSVType",
														"type": "DatasetReference",
														"parameters": {
															"TargetPath": {
																"value": "@item().TargetPath",
																"type": "Expression"
															},
															"TargetFolder": {
																"value": "@item().SourceFolder",
																"type": "Expression"
															}
														}
													}
												]
											}
										],
										"ifTrueActivities": [
											{
												"name": "SwitchForSettingFileType",
												"type": "Switch",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"on": {
														"value": "@item().SourceFileType",
														"type": "Expression"
													},
													"cases": [
														{
															"value": "*.json",
															"activities": [
																{
																	"name": "Get MetadataForJsonFileType",
																	"type": "GetMetadata",
																	"dependsOn": [],
																	"policy": {
																		"timeout": "7.00:00:00",
																		"retry": 0,
																		"retryIntervalInSeconds": 30,
																		"secureOutput": false,
																		"secureInput": false
																	},
																	"userProperties": [],
																	"typeProperties": {
																		"dataset": {
																			"referenceName": "GetMetadataOfBlobStorage",
																			"type": "DatasetReference",
																			"parameters": {
																				"SourcePath": {
																					"value": "@item().SourcePath",
																					"type": "Expression"
																				},
																				"SourceFolder": {
																					"value": "@item().SourceFolder",
																					"type": "Expression"
																				}
																			}
																		},
																		"fieldList": [
																			"childItems",
																			"exists",
																			"itemName",
																			"itemType",
																			"lastModified"
																		],
																		"storeSettings": {
																			"type": "AzureBlobStorageReadSettings",
																			"recursive": true
																		},
																		"formatSettings": {
																			"type": "DelimitedTextReadSettings"
																		}
																	}
																},
																{
																	"name": "FilterForJsonFileType",
																	"type": "Filter",
																	"dependsOn": [
																		{
																			"activity": "SetExcludeFilesForJsonFileType",
																			"dependencyConditions": [
																				"Succeeded"
																			]
																		}
																	],
																	"userProperties": [],
																	"typeProperties": {
																		"items": {
																			"value": "@activity('Get MetadataForJsonFileType').output.childItems",
																			"type": "Expression"
																		},
																		"condition": {
																			"value": "@and(not(contains(item().name,variables('ExcludeFiles'))),endswith(item().name,'json'))",
																			"type": "Expression"
																		}
																	}
																},
																{
																	"name": "ExecutePipelineForJsonFileType",
																	"type": "ExecutePipeline",
																	"dependsOn": [
																		{
																			"activity": "FilterForJsonFileType",
																			"dependencyConditions": [
																				"Succeeded"
																			]
																		}
																	],
																	"userProperties": [],
																	"typeProperties": {
																		"pipeline": {
																			"referenceName": "NestedForEach",
																			"type": "PipelineReference"
																		},
																		"waitOnCompletion": false,
																		"parameters": {
																			"SourceFolder": {
																				"value": "@item().SourceFolder",
																				"type": "Expression"
																			},
																			"SourceFile": {
																				"value": "@activity('FilterForJsonFileType').output.Value",
																				"type": "Expression"
																			},
																			"SourcePath": {
																				"value": "@item().SourcePath",
																				"type": "Expression"
																			},
																			"TargetPath": {
																				"value": "@item().TargetPath",
																				"type": "Expression"
																			},
																			"TargetFolder": {
																				"value": "@item().TargetFolder",
																				"type": "Expression"
																			}
																		}
																	}
																},
																{
																	"name": "SetExcludeFilesForJsonFileType",
																	"type": "SetVariable",
																	"dependsOn": [
																		{
																			"activity": "Get MetadataForJsonFileType",
																			"dependencyConditions": [
																				"Succeeded"
																			]
																		}
																	],
																	"userProperties": [],
																	"typeProperties": {
																		"variableName": "ExcludeFiles",
																		"value": {
																			"value": "@item().ExcludeFiles",
																			"type": "Expression"
																		}
																	}
																}
															]
														},
														{
															"value": "*.csv",
															"activities": [
																{
																	"name": "Get MetadataForCSVFileType",
																	"type": "GetMetadata",
																	"dependsOn": [],
																	"policy": {
																		"timeout": "7.00:00:00",
																		"retry": 0,
																		"retryIntervalInSeconds": 30,
																		"secureOutput": false,
																		"secureInput": false
																	},
																	"userProperties": [],
																	"typeProperties": {
																		"dataset": {
																			"referenceName": "GetMetadataOfBlobStorage",
																			"type": "DatasetReference",
																			"parameters": {
																				"SourcePath": {
																					"value": "@item().SourcePath",
																					"type": "Expression"
																				},
																				"SourceFolder": {
																					"value": "@item().SourceFolder",
																					"type": "Expression"
																				}
																			}
																		},
																		"fieldList": [
																			"childItems",
																			"exists",
																			"itemName",
																			"itemType",
																			"lastModified"
																		],
																		"storeSettings": {
																			"type": "AzureBlobStorageReadSettings",
																			"recursive": true
																		},
																		"formatSettings": {
																			"type": "DelimitedTextReadSettings"
																		}
																	}
																},
																{
																	"name": "FilterForCSV",
																	"type": "Filter",
																	"dependsOn": [
																		{
																			"activity": "SetExcludeFilesForCSVFileType",
																			"dependencyConditions": [
																				"Succeeded"
																			]
																		}
																	],
																	"userProperties": [],
																	"typeProperties": {
																		"items": {
																			"value": "@activity('Get MetadataForCSVFileType').output.childItems",
																			"type": "Expression"
																		},
																		"condition": {
																			"value": "@and(not(contains(item().name,variables('ExcludeFiles'))),endswith(item().name,'csv'))",
																			"type": "Expression"
																		}
																	}
																},
																{
																	"name": "Execute Pipeline1ForCSVFileType",
																	"type": "ExecutePipeline",
																	"dependsOn": [
																		{
																			"activity": "FilterForCSV",
																			"dependencyConditions": [
																				"Succeeded"
																			]
																		}
																	],
																	"userProperties": [],
																	"typeProperties": {
																		"pipeline": {
																			"referenceName": "NestedForEach",
																			"type": "PipelineReference"
																		},
																		"waitOnCompletion": false,
																		"parameters": {
																			"SourceFolder": {
																				"value": "@item().SourceFolder",
																				"type": "Expression"
																			},
																			"SourceFile": {
																				"value": "@activity('FilterForCSV').output.Value",
																				"type": "Expression"
																			},
																			"SourcePath": {
																				"value": "@item().SourcePath",
																				"type": "Expression"
																			},
																			"TargetPath": {
																				"value": "@item().TargetPath",
																				"type": "Expression"
																			},
																			"TargetFolder": {
																				"value": "@item().TargetFolder",
																				"type": "Expression"
																			}
																		}
																	}
																},
																{
																	"name": "SetExcludeFilesForCSVFileType",
																	"type": "SetVariable",
																	"dependsOn": [
																		{
																			"activity": "Get MetadataForCSVFileType",
																			"dependencyConditions": [
																				"Succeeded"
																			]
																		}
																	],
																	"userProperties": [],
																	"typeProperties": {
																		"variableName": "ExcludeFiles",
																		"value": {
																			"value": "@item().ExcludeFiles",
																			"type": "Expression"
																		}
																	}
																}
															]
														},
														{
															"value": "*.parquet",
															"activities": [
																{
																	"name": "Get Metadata1ForParquet",
																	"type": "GetMetadata",
																	"dependsOn": [],
																	"policy": {
																		"timeout": "7.00:00:00",
																		"retry": 0,
																		"retryIntervalInSeconds": 30,
																		"secureOutput": false,
																		"secureInput": false
																	},
																	"userProperties": [],
																	"typeProperties": {
																		"dataset": {
																			"referenceName": "GetMetadataOfBlobStorage",
																			"type": "DatasetReference",
																			"parameters": {
																				"SourcePath": {
																					"value": "@item().SourcePath",
																					"type": "Expression"
																				},
																				"SourceFolder": {
																					"value": "@item().SourceFolder",
																					"type": "Expression"
																				}
																			}
																		},
																		"fieldList": [
																			"childItems",
																			"exists",
																			"itemName",
																			"itemType",
																			"lastModified"
																		],
																		"storeSettings": {
																			"type": "AzureBlobStorageReadSettings",
																			"recursive": true
																		},
																		"formatSettings": {
																			"type": "DelimitedTextReadSettings"
																		}
																	}
																},
																{
																	"name": "FilterForParquetFileType",
																	"type": "Filter",
																	"dependsOn": [
																		{
																			"activity": "SetExcludeFilesForParquetFileType",
																			"dependencyConditions": [
																				"Succeeded"
																			]
																		}
																	],
																	"userProperties": [],
																	"typeProperties": {
																		"items": {
																			"value": "@activity('Get Metadata1ForParquet').output.childItems",
																			"type": "Expression"
																		},
																		"condition": {
																			"value": "@and(not(contains(item().name,variables('ExcludeFiles'))),endswith(item().name,'parquet'))",
																			"type": "Expression"
																		}
																	}
																},
																{
																	"name": "ExecutePipeline1ForParquetFileType",
																	"type": "ExecutePipeline",
																	"dependsOn": [
																		{
																			"activity": "FilterForParquetFileType",
																			"dependencyConditions": [
																				"Succeeded"
																			]
																		}
																	],
																	"userProperties": [],
																	"typeProperties": {
																		"pipeline": {
																			"referenceName": "NestedForEach",
																			"type": "PipelineReference"
																		},
																		"waitOnCompletion": false,
																		"parameters": {
																			"SourceFolder": {
																				"value": "@item().SourceFolder",
																				"type": "Expression"
																			},
																			"SourceFile": {
																				"value": "@activity('FilterForParquetFileType').output.Value",
																				"type": "Expression"
																			},
																			"SourcePath": {
																				"value": "@item().SourcePath",
																				"type": "Expression"
																			},
																			"TargetPath": {
																				"value": "@item().TargetPath",
																				"type": "Expression"
																			},
																			"TargetFolder": {
																				"value": "@item().TargetFolder",
																				"type": "Expression"
																			}
																		}
																	}
																},
																{
																	"name": "SetExcludeFilesForParquetFileType",
																	"type": "SetVariable",
																	"dependsOn": [
																		{
																			"activity": "Get Metadata1ForParquet",
																			"dependencyConditions": [
																				"Succeeded"
																			]
																		}
																	],
																	"userProperties": [],
																	"typeProperties": {
																		"variableName": "ExcludeFiles",
																		"value": {
																			"value": "@item().ExcludeFiles",
																			"type": "Expression"
																		}
																	}
																}
															]
														},
														{
															"value": "*",
															"activities": [
																{
																	"name": "Get Metadata1ForAllFileType",
																	"type": "GetMetadata",
																	"dependsOn": [],
																	"policy": {
																		"timeout": "7.00:00:00",
																		"retry": 0,
																		"retryIntervalInSeconds": 30,
																		"secureOutput": false,
																		"secureInput": false
																	},
																	"userProperties": [],
																	"typeProperties": {
																		"dataset": {
																			"referenceName": "GetMetadataOfBlobStorage",
																			"type": "DatasetReference",
																			"parameters": {
																				"SourcePath": {
																					"value": "@item().SourcePath",
																					"type": "Expression"
																				},
																				"SourceFolder": {
																					"value": "@item().SourceFolder",
																					"type": "Expression"
																				}
																			}
																		},
																		"fieldList": [
																			"childItems",
																			"exists",
																			"itemName",
																			"itemType",
																			"lastModified"
																		],
																		"storeSettings": {
																			"type": "AzureBlobStorageReadSettings",
																			"recursive": true
																		},
																		"formatSettings": {
																			"type": "DelimitedTextReadSettings"
																		}
																	}
																},
																{
																	"name": "FilterForAllFileType",
																	"type": "Filter",
																	"dependsOn": [
																		{
																			"activity": "SetExcludeFilesForAllFileType",
																			"dependencyConditions": [
																				"Succeeded"
																			]
																		}
																	],
																	"userProperties": [],
																	"typeProperties": {
																		"items": {
																			"value": "@activity('Get Metadata1ForAllFileType').output.childItems",
																			"type": "Expression"
																		},
																		"condition": {
																			"value": "@and(not(contains(item().name,variables('ExcludeFiles'))),contains(item().name,'.'))",
																			"type": "Expression"
																		}
																	}
																},
																{
																	"name": "ExecutePipelineForAllFileType",
																	"type": "ExecutePipeline",
																	"dependsOn": [
																		{
																			"activity": "FilterForAllFileType",
																			"dependencyConditions": [
																				"Succeeded"
																			]
																		}
																	],
																	"userProperties": [],
																	"typeProperties": {
																		"pipeline": {
																			"referenceName": "NestedForEach",
																			"type": "PipelineReference"
																		},
																		"waitOnCompletion": false,
																		"parameters": {
																			"SourceFolder": {
																				"value": "@item().SourceFolder",
																				"type": "Expression"
																			},
																			"SourceFile": {
																				"value": "@activity('FilterForAllFileType').output.Value",
																				"type": "Expression"
																			},
																			"SourcePath": {
																				"value": "@item().SourcePath",
																				"type": "Expression"
																			},
																			"TargetPath": {
																				"value": "@item().TargetPath",
																				"type": "Expression"
																			},
																			"TargetFolder": {
																				"value": "@item().TargetFolder",
																				"type": "Expression"
																			}
																		}
																	}
																},
																{
																	"name": "SetExcludeFilesForAllFileType",
																	"type": "SetVariable",
																	"dependsOn": [
																		{
																			"activity": "Get Metadata1ForAllFileType",
																			"dependencyConditions": [
																				"Succeeded"
																			]
																		}
																	],
																	"userProperties": [],
																	"typeProperties": {
																		"variableName": "ExcludeFiles",
																		"value": {
																			"value": "@item().ExcludeFiles",
																			"type": "Expression"
																		}
																	}
																}
															]
														}
													],
													"defaultActivities": [
														{
															"name": "Get MetadataWhenFileTypeisNull",
															"type": "GetMetadata",
															"dependsOn": [],
															"policy": {
																"timeout": "7.00:00:00",
																"retry": 0,
																"retryIntervalInSeconds": 30,
																"secureOutput": false,
																"secureInput": false
															},
															"userProperties": [],
															"typeProperties": {
																"dataset": {
																	"referenceName": "GetMetadataOfBlobStorage",
																	"type": "DatasetReference",
																	"parameters": {
																		"SourcePath": {
																			"value": "@item().SourcePath",
																			"type": "Expression"
																		},
																		"SourceFolder": {
																			"value": "@item().SourceFolder",
																			"type": "Expression"
																		}
																	}
																},
																"fieldList": [
																	"childItems",
																	"exists",
																	"itemName",
																	"itemType",
																	"lastModified"
																],
																"storeSettings": {
																	"type": "AzureBlobStorageReadSettings",
																	"recursive": true
																},
																"formatSettings": {
																	"type": "DelimitedTextReadSettings"
																}
															}
														},
														{
															"name": "FilterWhenFileTypeisNull",
															"type": "Filter",
															"dependsOn": [
																{
																	"activity": "SetExcludeFilesWhenFileTypeisNull",
																	"dependencyConditions": [
																		"Succeeded"
																	]
																}
															],
															"userProperties": [],
															"typeProperties": {
																"items": {
																	"value": "@activity('Get MetadataWhenFileTypeisNull').output.childItems",
																	"type": "Expression"
																},
																"condition": {
																	"value": "@and(not(contains(item().name,variables('ExcludeFiles'))),contains(item().name,'.'))",
																	"type": "Expression"
																}
															}
														},
														{
															"name": "ExecutePipelineWhenFileTypeisNull",
															"type": "ExecutePipeline",
															"dependsOn": [
																{
																	"activity": "FilterWhenFileTypeisNull",
																	"dependencyConditions": [
																		"Succeeded"
																	]
																}
															],
															"userProperties": [],
															"typeProperties": {
																"pipeline": {
																	"referenceName": "NestedForEach",
																	"type": "PipelineReference"
																},
																"waitOnCompletion": false,
																"parameters": {
																	"SourceFolder": {
																		"value": "@item().SourceFolder",
																		"type": "Expression"
																	},
																	"SourceFile": {
																		"value": "@activity('FilterWhenFileTypeisNull').output.Value",
																		"type": "Expression"
																	},
																	"SourcePath": {
																		"value": "@item().SourcePath",
																		"type": "Expression"
																	},
																	"TargetPath": {
																		"value": "@item().TargetPath",
																		"type": "Expression"
																	},
																	"TargetFolder": {
																		"value": "@item().TargetFolder",
																		"type": "Expression"
																	}
																}
															}
														},
														{
															"name": "SetExcludeFilesWhenFileTypeisNull",
															"type": "SetVariable",
															"dependsOn": [
																{
																	"activity": "Get MetadataWhenFileTypeisNull",
																	"dependencyConditions": [
																		"Succeeded"
																	]
																}
															],
															"userProperties": [],
															"typeProperties": {
																"variableName": "ExcludeFiles",
																"value": {
																	"value": "@item().ExcludeFiles",
																	"type": "Expression"
																}
															}
														}
													]
												}
											}
										]
									}
								},
								{
									"name": "SetVariableForExclueFile",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "ExcludeFiles",
										"value": {
											"value": "@item().ExcludeFiles",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"variables": {
					"ExcludeFiles": {
						"type": "String"
					},
					"TrueFileType": {
						"type": "String"
					},
					"FileTypeFinal": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Jyoti_Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2020-08-17T05:00:19Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable3')]",
				"[concat(variables('factoryId'), '/datasets/CGLHSourceCSVType')]",
				"[concat(variables('factoryId'), '/datasets/CGLHTargetCSVType')]",
				"[concat(variables('factoryId'), '/datasets/GetMetadataOfBlobStorage')]",
				"[concat(variables('factoryId'), '/pipelines/NestedForEach')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyFromDifferentBlobWithMultipleExcludeFile_v1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetSqlTableDetail",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select a.ParamName,a.SourcePath,a.SourceFolder,a.SourceFileType_New as SourceFileType,a.TargetPath,a.TargetFolder,a.TargetFileType,a.ExcludeFiles,a.ActiveFlag from (\nselect ParamName,SourcePath,SourceFolder,SourceFileType,TargetPath,TargetFolder,TargetFileType,ExcludeFiles, ActiveFlag, CASE \n\t\t\t\tWHEN (SourceFileType is NULL) THEN '*'\n\t\t\t\tELSE SourceFileType\n\t\t\t\tend as SourceFileType_New \n\t\t\t\tfrom [cglhdatabase].[dbo].[CGConfiguration] \nwhere GroupName='CopyFiles' and ActiveFlag = 'Y') a",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlTable3",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "For Each Record1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GetSqlTableDetail",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetSqlTableDetail').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "SetVariableForExclueFile",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@not(empty(item().ExcludeFiles))",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "CopydataForeach",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": true,
															"wildcardFolderPath": {
																"value": "@item().SourceFolder",
																"type": "Expression"
															},
															"wildcardFileName": {
																"value": "@item().SourceFileType",
																"type": "Expression"
															},
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														}
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureBlobStorageWriteSettings",
															"copyBehavior": "PreserveHierarchy"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ""
														}
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "CGLHSourceCSVType",
														"type": "DatasetReference",
														"parameters": {
															"SourcePath": {
																"value": "@item().SourcePath",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "CGLHTargetCSVType",
														"type": "DatasetReference",
														"parameters": {
															"TargetPath": {
																"value": "@item().TargetPath",
																"type": "Expression"
															},
															"TargetFolder": {
																"value": "@item().TargetFolder",
																"type": "Expression"
															}
														}
													}
												]
											}
										],
										"ifTrueActivities": [
											{
												"name": "SwitchForSettingFileType",
												"type": "Switch",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"on": {
														"value": "@item().SourceFileType",
														"type": "Expression"
													},
													"cases": [
														{
															"value": "*.json",
															"activities": [
																{
																	"name": "Get Metadata1ForAllFileType_Json",
																	"type": "GetMetadata",
																	"dependsOn": [],
																	"policy": {
																		"timeout": "7.00:00:00",
																		"retry": 0,
																		"retryIntervalInSeconds": 30,
																		"secureOutput": false,
																		"secureInput": false
																	},
																	"userProperties": [],
																	"typeProperties": {
																		"dataset": {
																			"referenceName": "GetMetadataOfBlobStorage",
																			"type": "DatasetReference",
																			"parameters": {
																				"SourcePath": {
																					"value": "@item().SourcePath",
																					"type": "Expression"
																				},
																				"SourceFolder": {
																					"value": "@item().SourceFolder",
																					"type": "Expression"
																				}
																			}
																		},
																		"fieldList": [
																			"childItems"
																		],
																		"storeSettings": {
																			"type": "AzureBlobStorageReadSettings",
																			"recursive": true
																		},
																		"formatSettings": {
																			"type": "DelimitedTextReadSettings"
																		}
																	}
																},
																{
																	"name": "Execute Pipeline3",
																	"type": "ExecutePipeline",
																	"dependsOn": [
																		{
																			"activity": "SplitExcludeFileWithCommas_Json",
																			"dependencyConditions": [
																				"Succeeded"
																			]
																		}
																	],
																	"userProperties": [],
																	"typeProperties": {
																		"pipeline": {
																			"referenceName": "ForEveryJsonTypeExcludeFiles",
																			"type": "PipelineReference"
																		},
																		"waitOnCompletion": false,
																		"parameters": {
																			"a1": {
																				"value": "@array(activity('Get Metadata1ForAllFileType_Json').output.childItems)",
																				"type": "Expression"
																			},
																			"a2": {
																				"value": "@array(variables('SplitExcludeFilesIntoArray'))",
																				"type": "Expression"
																			},
																			"SourcePath": {
																				"value": "@item().SourcePath",
																				"type": "Expression"
																			},
																			"SourceFolder": {
																				"value": "@item().SourceFolder",
																				"type": "Expression"
																			},
																			"TargetPath": {
																				"value": "@item().TargetPath",
																				"type": "Expression"
																			},
																			"TargetFolder": {
																				"value": "@item().TargetFolder",
																				"type": "Expression"
																			}
																		}
																	}
																},
																{
																	"name": "SplitExcludeFileWithCommas_Json",
																	"type": "SetVariable",
																	"dependsOn": [
																		{
																			"activity": "Get Metadata1ForAllFileType_Json",
																			"dependencyConditions": [
																				"Succeeded"
																			]
																		}
																	],
																	"userProperties": [],
																	"typeProperties": {
																		"variableName": "SplitExcludeFilesIntoArray",
																		"value": {
																			"value": "@split(variables('ExcludeFiles'),',')",
																			"type": "Expression"
																		}
																	}
																}
															]
														},
														{
															"value": "*.csv",
															"activities": [
																{
																	"name": "Get Metadata1ForAllFileType_CSV",
																	"type": "GetMetadata",
																	"dependsOn": [],
																	"policy": {
																		"timeout": "7.00:00:00",
																		"retry": 0,
																		"retryIntervalInSeconds": 30,
																		"secureOutput": false,
																		"secureInput": false
																	},
																	"userProperties": [],
																	"typeProperties": {
																		"dataset": {
																			"referenceName": "GetMetadataOfBlobStorage",
																			"type": "DatasetReference",
																			"parameters": {
																				"SourcePath": {
																					"value": "@item().SourcePath",
																					"type": "Expression"
																				},
																				"SourceFolder": {
																					"value": "@item().SourceFolder",
																					"type": "Expression"
																				}
																			}
																		},
																		"fieldList": [
																			"childItems"
																		],
																		"storeSettings": {
																			"type": "AzureBlobStorageReadSettings",
																			"recursive": true
																		},
																		"formatSettings": {
																			"type": "DelimitedTextReadSettings"
																		}
																	}
																},
																{
																	"name": "Execute Pipeline1_1",
																	"type": "ExecutePipeline",
																	"dependsOn": [
																		{
																			"activity": "SplitExcludeFileWithCommas_CSV",
																			"dependencyConditions": [
																				"Succeeded"
																			]
																		}
																	],
																	"userProperties": [],
																	"typeProperties": {
																		"pipeline": {
																			"referenceName": "ForEveryCSVTypeExcludeFiles",
																			"type": "PipelineReference"
																		},
																		"waitOnCompletion": false,
																		"parameters": {
																			"a1": {
																				"value": "@array(activity('Get Metadata1ForAllFileType_CSV').output.childItems)",
																				"type": "Expression"
																			},
																			"a2": {
																				"value": "@array(variables('SplitExcludeFilesIntoArray'))",
																				"type": "Expression"
																			},
																			"SourcePath": {
																				"value": "@item().SourcePath",
																				"type": "Expression"
																			},
																			"SourceFolder": {
																				"value": "@item().SourceFolder",
																				"type": "Expression"
																			},
																			"TargetPath": {
																				"value": "@item().TargetPath",
																				"type": "Expression"
																			},
																			"TargetFolder": {
																				"value": "@item().TargetFolder",
																				"type": "Expression"
																			}
																		}
																	}
																},
																{
																	"name": "SplitExcludeFileWithCommas_CSV",
																	"type": "SetVariable",
																	"dependsOn": [
																		{
																			"activity": "Get Metadata1ForAllFileType_CSV",
																			"dependencyConditions": [
																				"Succeeded"
																			]
																		}
																	],
																	"userProperties": [],
																	"typeProperties": {
																		"variableName": "SplitExcludeFilesIntoArray",
																		"value": {
																			"value": "@split(variables('ExcludeFiles'),',')",
																			"type": "Expression"
																		}
																	}
																}
															]
														},
														{
															"value": "*.parquet",
															"activities": [
																{
																	"name": "Get Metadata1ForAllFileType_Parquet",
																	"type": "GetMetadata",
																	"dependsOn": [],
																	"policy": {
																		"timeout": "7.00:00:00",
																		"retry": 0,
																		"retryIntervalInSeconds": 30,
																		"secureOutput": false,
																		"secureInput": false
																	},
																	"userProperties": [],
																	"typeProperties": {
																		"dataset": {
																			"referenceName": "GetMetadataOfBlobStorage",
																			"type": "DatasetReference",
																			"parameters": {
																				"SourcePath": {
																					"value": "@item().SourcePath",
																					"type": "Expression"
																				},
																				"SourceFolder": {
																					"value": "@item().SourceFolder",
																					"type": "Expression"
																				}
																			}
																		},
																		"fieldList": [
																			"childItems"
																		],
																		"storeSettings": {
																			"type": "AzureBlobStorageReadSettings",
																			"recursive": true
																		},
																		"formatSettings": {
																			"type": "DelimitedTextReadSettings"
																		}
																	}
																},
																{
																	"name": "Execute Pipeline2",
																	"type": "ExecutePipeline",
																	"dependsOn": [
																		{
																			"activity": "SplitExcludeFileWithCommas_Parquet",
																			"dependencyConditions": [
																				"Succeeded"
																			]
																		}
																	],
																	"userProperties": [],
																	"typeProperties": {
																		"pipeline": {
																			"referenceName": "ForEveryParquetTypeExcludeFiles",
																			"type": "PipelineReference"
																		},
																		"waitOnCompletion": false,
																		"parameters": {
																			"a1": {
																				"value": "@array(activity('Get Metadata1ForAllFileType_Parquet').output.childItems)",
																				"type": "Expression"
																			},
																			"a2": {
																				"value": "@array(variables('SplitExcludeFilesIntoArray'))",
																				"type": "Expression"
																			},
																			"SourcePath": {
																				"value": "@item().SourcePath",
																				"type": "Expression"
																			},
																			"SourceFolder": {
																				"value": "@item().SourceFolder",
																				"type": "Expression"
																			},
																			"TargetPath": {
																				"value": "@item().TargetPath",
																				"type": "Expression"
																			},
																			"TargetFolder": {
																				"value": "@item().TargetFolder",
																				"type": "Expression"
																			}
																		}
																	}
																},
																{
																	"name": "SplitExcludeFileWithCommas_Parquet",
																	"type": "SetVariable",
																	"dependsOn": [
																		{
																			"activity": "Get Metadata1ForAllFileType_Parquet",
																			"dependencyConditions": [
																				"Succeeded"
																			]
																		}
																	],
																	"userProperties": [],
																	"typeProperties": {
																		"variableName": "SplitExcludeFilesIntoArray",
																		"value": {
																			"value": "@split(variables('ExcludeFiles'),',')",
																			"type": "Expression"
																		}
																	}
																}
															]
														},
														{
															"value": "*",
															"activities": [
																{
																	"name": "Get Metadata1ForAllFileType",
																	"type": "GetMetadata",
																	"dependsOn": [
																		{
																			"activity": "SplitExcludeFileWithCommas",
																			"dependencyConditions": [
																				"Succeeded"
																			]
																		}
																	],
																	"policy": {
																		"timeout": "7.00:00:00",
																		"retry": 0,
																		"retryIntervalInSeconds": 30,
																		"secureOutput": false,
																		"secureInput": false
																	},
																	"userProperties": [],
																	"typeProperties": {
																		"dataset": {
																			"referenceName": "GetMetadataOfBlobStorage",
																			"type": "DatasetReference",
																			"parameters": {
																				"SourcePath": {
																					"value": "@item().SourcePath",
																					"type": "Expression"
																				},
																				"SourceFolder": {
																					"value": "@item().SourceFolder",
																					"type": "Expression"
																				}
																			}
																		},
																		"fieldList": [
																			"childItems"
																		],
																		"storeSettings": {
																			"type": "AzureBlobStorageReadSettings",
																			"recursive": true
																		},
																		"formatSettings": {
																			"type": "DelimitedTextReadSettings"
																		}
																	}
																},
																{
																	"name": "Execute Pipeline1",
																	"type": "ExecutePipeline",
																	"dependsOn": [
																		{
																			"activity": "Get Metadata1ForAllFileType",
																			"dependencyConditions": [
																				"Completed"
																			]
																		}
																	],
																	"userProperties": [],
																	"typeProperties": {
																		"pipeline": {
																			"referenceName": "nestedForEachForExcludFiles",
																			"type": "PipelineReference"
																		},
																		"waitOnCompletion": false,
																		"parameters": {
																			"a1": {
																				"value": "@array(activity('Get Metadata1ForAllFileType').output.childItems)",
																				"type": "Expression"
																			},
																			"a2": {
																				"value": "@array(variables('SplitExcludeFilesIntoArray'))",
																				"type": "Expression"
																			},
																			"SourcePath": {
																				"value": "@item().SourcePath",
																				"type": "Expression"
																			},
																			"SourceFolder": {
																				"value": "@item().SourceFolder",
																				"type": "Expression"
																			},
																			"TargetPath": {
																				"value": "@item().TargetPath",
																				"type": "Expression"
																			},
																			"TargetFolder": {
																				"value": "@item().TargetFolder",
																				"type": "Expression"
																			}
																		}
																	}
																},
																{
																	"name": "SplitExcludeFileWithCommas",
																	"type": "SetVariable",
																	"dependsOn": [],
																	"userProperties": [],
																	"typeProperties": {
																		"variableName": "SplitExcludeFilesIntoArray",
																		"value": {
																			"value": "@split(variables('ExcludeFiles'),',')",
																			"type": "Expression"
																		}
																	}
																}
															]
														}
													],
													"defaultActivities": [
														{
															"name": "Get MetadataWhenFileTypeisNull",
															"type": "GetMetadata",
															"dependsOn": [],
															"policy": {
																"timeout": "7.00:00:00",
																"retry": 0,
																"retryIntervalInSeconds": 30,
																"secureOutput": false,
																"secureInput": false
															},
															"userProperties": [],
															"typeProperties": {
																"dataset": {
																	"referenceName": "GetMetadataOfBlobStorage",
																	"type": "DatasetReference",
																	"parameters": {
																		"SourcePath": {
																			"value": "@item().SourcePath",
																			"type": "Expression"
																		},
																		"SourceFolder": {
																			"value": "@item().SourceFolder",
																			"type": "Expression"
																		}
																	}
																},
																"fieldList": [
																	"childItems",
																	"exists",
																	"itemName",
																	"itemType",
																	"lastModified"
																],
																"storeSettings": {
																	"type": "AzureBlobStorageReadSettings",
																	"recursive": true
																},
																"formatSettings": {
																	"type": "DelimitedTextReadSettings"
																}
															}
														},
														{
															"name": "FilterWhenFileTypeisNull",
															"type": "Filter",
															"dependsOn": [
																{
																	"activity": "SetExcludeFilesWhenFileTypeisNull",
																	"dependencyConditions": [
																		"Succeeded"
																	]
																}
															],
															"userProperties": [],
															"typeProperties": {
																"items": {
																	"value": "@activity('Get MetadataWhenFileTypeisNull').output.childItems",
																	"type": "Expression"
																},
																"condition": {
																	"value": "@and(not(contains(item().name,variables('ExcludeFiles'))),contains(item().name,'.'))",
																	"type": "Expression"
																}
															}
														},
														{
															"name": "ExecutePipelineWhenFileTypeisNull",
															"type": "ExecutePipeline",
															"dependsOn": [
																{
																	"activity": "FilterWhenFileTypeisNull",
																	"dependencyConditions": [
																		"Succeeded"
																	]
																}
															],
															"userProperties": [],
															"typeProperties": {
																"pipeline": {
																	"referenceName": "NestedForEach",
																	"type": "PipelineReference"
																},
																"waitOnCompletion": false,
																"parameters": {
																	"SourceFolder": {
																		"value": "@item().SourceFolder",
																		"type": "Expression"
																	},
																	"SourceFile": {
																		"value": "@activity('FilterWhenFileTypeisNull').output.Value",
																		"type": "Expression"
																	},
																	"SourcePath": {
																		"value": "@item().SourcePath",
																		"type": "Expression"
																	},
																	"TargetPath": {
																		"value": "@item().TargetPath",
																		"type": "Expression"
																	},
																	"TargetFolder": {
																		"value": "@item().TargetFolder",
																		"type": "Expression"
																	}
																}
															}
														},
														{
															"name": "SetExcludeFilesWhenFileTypeisNull",
															"type": "SetVariable",
															"dependsOn": [
																{
																	"activity": "Get MetadataWhenFileTypeisNull",
																	"dependencyConditions": [
																		"Succeeded"
																	]
																}
															],
															"userProperties": [],
															"typeProperties": {
																"variableName": "ExcludeFiles",
																"value": {
																	"value": "@item().ExcludeFiles",
																	"type": "Expression"
																}
															}
														}
													]
												}
											}
										]
									}
								},
								{
									"name": "SetVariableForExclueFile",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "ExcludeFiles",
										"value": {
											"value": "@item().ExcludeFiles",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"variables": {
					"ExcludeFiles": {
						"type": "String"
					},
					"CovertMetaDataToArray": {
						"type": "Array"
					},
					"FileTypeFinal": {
						"type": "Array"
					},
					"SplitExcludeFilesIntoArray": {
						"type": "Array"
					},
					"LoopThroughExcludeFilesVariable": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "Jyoti_Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2020-08-23T08:22:10Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable3')]",
				"[concat(variables('factoryId'), '/datasets/CGLHSourceCSVType')]",
				"[concat(variables('factoryId'), '/datasets/CGLHTargetCSVType')]",
				"[concat(variables('factoryId'), '/datasets/GetMetadataOfBlobStorage')]",
				"[concat(variables('factoryId'), '/pipelines/NestedForEach')]",
				"[concat(variables('factoryId'), '/pipelines/ForEveryJsonTypeExcludeFiles')]",
				"[concat(variables('factoryId'), '/pipelines/ForEveryCSVTypeExcludeFiles')]",
				"[concat(variables('factoryId'), '/pipelines/ForEveryParquetTypeExcludeFiles')]",
				"[concat(variables('factoryId'), '/pipelines/nestedForEachForExcludFiles')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyFromDifferentBlobWithMultiple_Exclude_Include_File')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetSqlTableDetail",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select a.ParamName,a.SourcePath,a.SourceFolder,a.SourceFileType_New as SourceFileType,a.TargetPath,a.TargetFolder,a.TargetFileType,a.ExcludeFiles\n,a.ActiveFlag, a.Priority from (\nselect ParamName,SourcePath,SourceFolder,SourceFileType,TargetPath,TargetFolder,TargetFileType,ExcludeFiles, ActiveFlag,Priority, CASE \n\t\t\t\tWHEN (SourceFileType is NULL) THEN '*'\n\t\t\t\tELSE SourceFileType\n\t\t\t\tend as SourceFileType_New \n\t\t\t\tfrom [cglhdatabase].[dbo].[CGConfiguration] \nwhere GroupName='CopyFiles' and ActiveFlag = 'Y') a order by Priority",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlTable3",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "For Each Record1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GetSqlTableDetail",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetSqlTableDetail').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "If Condition2",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@contains(item().SourceFileType,'*')",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "IncludeFileNames",
												"type": "SetVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "IncludeFileNames",
													"value": {
														"value": "@split(item().SourceFileType,',')",
														"type": "Expression"
													}
												}
											},
											{
												"name": "ExecutePipelineforGettingNameOfMultipleInclude",
												"type": "ExecutePipeline",
												"dependsOn": [
													{
														"activity": "IncludeFileNames",
														"dependencyConditions": [
															"Succeeded"
														]
													},
													{
														"activity": "GetMetadataOfSourceFolder",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "CopyBlobtoBlobForMultipleInclude",
														"type": "PipelineReference"
													},
													"waitOnCompletion": true,
													"parameters": {
														"a1": {
															"value": "@array(activity('GetMetadataOfSourceFolder').output.childItems)",
															"type": "Expression"
														},
														"a2": {
															"value": "@array(variables('IncludeFileNames'))",
															"type": "Expression"
														},
														"SourcePath": {
															"value": "@item().SourcePath",
															"type": "Expression"
														},
														"SourceFolder": {
															"value": "@item().SourceFolder",
															"type": "Expression"
														},
														"TargetPath": {
															"value": "@item().TargetPath",
															"type": "Expression"
														},
														"TargetFolder": {
															"value": "@item().TargetFolder",
															"type": "Expression"
														}
													}
												}
											},
											{
												"name": "GetMetadataOfSourceFolder",
												"type": "GetMetadata",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataset": {
														"referenceName": "GetMetadataOfBlobStorage",
														"type": "DatasetReference",
														"parameters": {
															"SourcePath": {
																"value": "@item().SourcePath",
																"type": "Expression"
															},
															"SourceFolder": {
																"value": "@item().SourceFolder",
																"type": "Expression"
															}
														}
													},
													"fieldList": [
														"childItems"
													],
													"storeSettings": {
														"type": "AzureBlobStorageReadSettings",
														"recursive": true
													},
													"formatSettings": {
														"type": "DelimitedTextReadSettings"
													}
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "SetVariableForExclueFile",
												"type": "SetVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "ExcludeFiles",
													"value": {
														"value": "@item().ExcludeFiles",
														"type": "Expression"
													}
												}
											},
											{
												"name": "Execute Pipeline4",
												"type": "ExecutePipeline",
												"dependsOn": [
													{
														"activity": "SetVariableForExclueFile",
														"dependencyConditions": [
															"Succeeded"
														]
													},
													{
														"activity": "SetSourceFileType",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "CopyBlobtoBlobForMultipleExcludeFiles",
														"type": "PipelineReference"
													},
													"waitOnCompletion": true,
													"parameters": {
														"ExcludeFileNames": {
															"value": "@variables('ExcludeFiles')",
															"type": "Expression"
														},
														"SourceFileType": {
															"value": "@variables('SourceFileType')",
															"type": "Expression"
														},
														"SourceFolder": {
															"value": "@item().SourceFolder",
															"type": "Expression"
														},
														"SourcePath": {
															"value": "@item().SourcePath",
															"type": "Expression"
														},
														"TargetPath": {
															"value": "@item().TargetPath",
															"type": "Expression"
														},
														"TargetFolder": {
															"value": "@item().TargetFolder",
															"type": "Expression"
														}
													}
												}
											},
											{
												"name": "SetSourceFileType",
												"type": "SetVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "SourceFileType",
													"value": {
														"value": "@item().SourceFileType",
														"type": "Expression"
													}
												}
											}
										]
									}
								}
							]
						}
					}
				],
				"variables": {
					"ExcludeFiles": {
						"type": "String"
					},
					"CovertMetaDataToArray": {
						"type": "Array"
					},
					"FileTypeFinal": {
						"type": "Array"
					},
					"SplitExcludeFilesIntoArray": {
						"type": "Array"
					},
					"LoopThroughExcludeFilesVariable": {
						"type": "Array"
					},
					"IncludeFileNames": {
						"type": "Array",
						"defaultValue": []
					},
					"SourceFileType": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Jyoti_Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2020-09-01T10:35:59Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable3')]",
				"[concat(variables('factoryId'), '/pipelines/CopyBlobtoBlobForMultipleInclude')]",
				"[concat(variables('factoryId'), '/datasets/GetMetadataOfBlobStorage')]",
				"[concat(variables('factoryId'), '/pipelines/CopyBlobtoBlobForMultipleExcludeFiles')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyFromDifferentBlob_ExcludeFunctionality_Parameterize')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetSqlTableDetail",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "\nselect ParamName,SourcePath,SourceFolder,SourceFileType,TargetPath,TargetFolder,TargetFileType,ExcludeFiles from [cglhdatabase].[dbo].[CGConfiguration] \nwhere ParamName='CopyJSON_BLOBtoBLOB'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlTable3",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "For Each Record",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GetSqlTableDetail",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetSqlTableDetail').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Get Metadata1",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "GetMetadataOfBlobStorage",
											"type": "DatasetReference",
											"parameters": {
												"SourcePath": {
													"value": "@item().SourcePath",
													"type": "Expression"
												},
												"SourceFolder": {
													"value": "@item().SourceFolder",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"childItems",
											"exists",
											"itemName",
											"itemType",
											"lastModified"
										],
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true
										},
										"formatSettings": {
											"type": "DelimitedTextReadSettings"
										}
									}
								},
								{
									"name": "Filter1",
									"type": "Filter",
									"dependsOn": [
										{
											"activity": "Get Metadata1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"items": {
											"value": "@activity('Get Metadata1').output.childItems",
											"type": "Expression"
										},
										"condition": {
											"value": "@not(contains(item().name,'sample_json1.json'))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Execute Pipeline1",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Filter1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "NestedForEach",
											"type": "PipelineReference"
										},
										"waitOnCompletion": false,
										"parameters": {
											"SourceFolder": {
												"value": "@item().SourceFolder",
												"type": "Expression"
											},
											"SourceFile": {
												"value": "@activity('Filter1').output.Value",
												"type": "Expression"
											},
											"SourcePath": {
												"value": "@item().SourcePath",
												"type": "Expression"
											},
											"TargetPath": {
												"value": "@item().TargetPath",
												"type": "Expression"
											},
											"TargetFolder": {
												"value": "@item().TargetFolder",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"folder": {
					"name": "Jyoti_Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2020-08-12T08:17:35Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable3')]",
				"[concat(variables('factoryId'), '/datasets/GetMetadataOfBlobStorage')]",
				"[concat(variables('factoryId'), '/pipelines/NestedForEach')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyFromDifferentBlobs_parametarize')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetSqlTableDetail",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select ParamName,SourcePath,SourceFolder,SourceFileType,TargetPath,TargetFolder,TargetFileType from [cglhdatabase].[dbo].[CGConfiguration] \nwhere ParamName='CopyJSON_BLOBtoBLOB'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlTable3",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "For Each Record",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GetSqlTableDetail",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetSqlTableDetail').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "CopydataForeach",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"wildcardFolderPath": {
													"value": "@item().SourceFolder",
													"type": "Expression"
												},
												"wildcardFileName": {
													"value": "@item().SourceFileType",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings",
												"copyBehavior": "PreserveHierarchy"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ""
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "CGLHSourceCSVType",
											"type": "DatasetReference",
											"parameters": {
												"SourcePath": {
													"value": "@item().SourcePath",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "CGLHTargetCSVType",
											"type": "DatasetReference",
											"parameters": {
												"TargetPath": {
													"value": "@item().TargetPath",
													"type": "Expression"
												},
												"TargetFolder": {
													"value": "@item().SourceFolder",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"folder": {
					"name": "Jyoti_Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2020-08-11T06:07:40Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable3')]",
				"[concat(variables('factoryId'), '/datasets/CGLHSourceCSVType')]",
				"[concat(variables('factoryId'), '/datasets/CGLHTargetCSVType')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_1vt')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_1vt",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "cglhcontainer//dbo.FactSalesQuota.json"
							},
							{
								"name": "Destination",
								"value": "cglhcontainerpre//"
							}
						],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['SalesQuotaKey']"
										},
										"sink": {
											"path": "$['SalesQuotaKey']"
										}
									},
									{
										"source": {
											"path": "$['EmployeeKey']"
										},
										"sink": {
											"path": "$['EmployeeKey']"
										}
									},
									{
										"source": {
											"path": "$['DateKey']"
										},
										"sink": {
											"path": "$['DateKey']"
										}
									},
									{
										"source": {
											"path": "$['CalendarYear']"
										},
										"sink": {
											"path": "$['CalendarYear']"
										}
									},
									{
										"source": {
											"path": "$['CalendarQuarter']"
										},
										"sink": {
											"path": "$['CalendarQuarter']"
										}
									},
									{
										"source": {
											"path": "$['SalesAmountQuota']"
										},
										"sink": {
											"path": "$['SalesAmountQuota']"
										}
									},
									{
										"source": {
											"path": "$['Date']"
										},
										"sink": {
											"path": "$['Date']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_1vt",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_1vt",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-08-18T14:35:24Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_1vt')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_1vt')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_test')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_i1h",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "dbo.DimAccount"
							},
							{
								"name": "Destination",
								"value": "cglhcontainer//"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"validateDataConsistency": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_i1h",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_i1h",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-07-30T05:38:49Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_i1h')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_i1h')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_toSql')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_gwe",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "cglhsrc/2020/07/01/"
							},
							{
								"name": "Destination",
								"value": ".Azure Blob Storage file"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings",
									"skipLineCount": 0
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"tableOption": "autoCreate"
							},
							"enableStaging": false,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "contentVersion",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "contentVersion",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Column_Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Column_Name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Source_Value",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Source_Value",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Target_Value",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Target_Value",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Comments",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Comments",
											"type": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_gwe",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_gwe",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-08-17T12:18:51Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_gwe')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_gwe')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyWithIfElseFromDifferentBlob')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetSqlTableDetail",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select ParamName,SourcePath,SourceFolder,SourceFileType,TargetPath,TargetFolder,TargetFileType,ExcludeFiles from [cglhdatabase].[dbo].[CGConfiguration] \nwhere ParamName='CopyJSON_BLOBtoBLOB'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlTable3",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "For Each Record",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GetSqlTableDetail",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetSqlTableDetail').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Set variable1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@not(empty(item().ExcludeFiles))",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "CopydataForeach",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": true,
															"wildcardFolderPath": {
																"value": "@item().SourceFolder",
																"type": "Expression"
															},
															"wildcardFileName": {
																"value": "@item().SourceFileType",
																"type": "Expression"
															},
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														}
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureBlobStorageWriteSettings",
															"copyBehavior": "PreserveHierarchy"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ""
														}
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "CGLHSourceCSVType",
														"type": "DatasetReference",
														"parameters": {
															"SourcePath": {
																"value": "@item().SourcePath",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "CGLHTargetCSVType",
														"type": "DatasetReference",
														"parameters": {
															"TargetPath": {
																"value": "@item().TargetPath",
																"type": "Expression"
															},
															"TargetFolder": {
																"value": "@item().SourceFolder",
																"type": "Expression"
															}
														}
													}
												]
											}
										],
										"ifTrueActivities": [
											{
												"name": "Get Metadata1",
												"type": "GetMetadata",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataset": {
														"referenceName": "GetMetadataOfBlobStorage",
														"type": "DatasetReference",
														"parameters": {
															"SourcePath": {
																"value": "@item().SourcePath",
																"type": "Expression"
															},
															"SourceFolder": {
																"value": "@item().SourceFolder",
																"type": "Expression"
															}
														}
													},
													"fieldList": [
														"childItems",
														"exists",
														"itemName",
														"itemType",
														"lastModified"
													],
													"storeSettings": {
														"type": "AzureBlobStorageReadSettings",
														"recursive": true
													},
													"formatSettings": {
														"type": "DelimitedTextReadSettings"
													}
												}
											},
											{
												"name": "Filter1",
												"type": "Filter",
												"dependsOn": [
													{
														"activity": "Set variable1_copy1",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"userProperties": [],
												"typeProperties": {
													"items": {
														"value": "@activity('Get Metadata1').output.childItems",
														"type": "Expression"
													},
													"condition": {
														"value": "@and(not(contains(item().name,variables('ExcludeFiles'))),endswith(item().name,'.json'))",
														"type": "Expression"
													}
												}
											},
											{
												"name": "Execute Pipeline1",
												"type": "ExecutePipeline",
												"dependsOn": [
													{
														"activity": "Filter1",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "NestedForEach",
														"type": "PipelineReference"
													},
													"waitOnCompletion": false,
													"parameters": {
														"SourceFolder": {
															"value": "@item().SourceFolder",
															"type": "Expression"
														},
														"SourceFile": {
															"value": "@activity('Filter1').output.Value",
															"type": "Expression"
														},
														"SourcePath": {
															"value": "@item().SourcePath",
															"type": "Expression"
														},
														"TargetPath": {
															"value": "@item().TargetPath",
															"type": "Expression"
														},
														"TargetFolder": {
															"value": "@item().TargetFolder",
															"type": "Expression"
														}
													}
												}
											},
											{
												"name": "Set variable1_copy1",
												"type": "SetVariable",
												"dependsOn": [
													{
														"activity": "Get Metadata1",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"userProperties": [],
												"typeProperties": {
													"variableName": "ExcludeFiles",
													"value": {
														"value": "@item().ExcludeFiles",
														"type": "Expression"
													}
												}
											}
										]
									}
								},
								{
									"name": "Set variable1",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "ExcludeFiles",
										"value": {
											"value": "@item().ExcludeFiles",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"variables": {
					"ExcludeFiles": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Jyoti_Pipelines"
				},
				"annotations": [
					"source"
				],
				"lastPublishTime": "2020-08-14T11:15:48Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable3')]",
				"[concat(variables('factoryId'), '/datasets/CGLHSourceCSVType')]",
				"[concat(variables('factoryId'), '/datasets/CGLHTargetCSVType')]",
				"[concat(variables('factoryId'), '/datasets/GetMetadataOfBlobStorage')]",
				"[concat(variables('factoryId'), '/pipelines/NestedForEach')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DumptoSqlParallel')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DelimitedText11111",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"itemName",
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filter1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childItems",
								"type": "Expression"
							},
							"batchCount": 50,
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ParquetSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"wildcardFolderPath": "2020/ParquetToLoadInSQLTable_v1",
												"wildcardFileName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"tableOption": "autoCreate"
										},
										"enableStaging": false,
										"parallelCopies": 256,
										"dataIntegrationUnits": 256,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "Dataset_ForLoadingParquetFromCGLHSRCtoGLHDB",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "AzureSqlDumpDB",
											"type": "DatasetReference",
											"parameters": {
												"TargetTableName": {
													"value": "test2",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Filter1",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(activity('Get Metadata1').output.childItems,'parquet')",
								"type": "Expression"
							}
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-08-23T18:29:23Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DelimitedText11111')]",
				"[concat(variables('factoryId'), '/datasets/Dataset_ForLoadingParquetFromCGLHSRCtoGLHDB')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlDumpDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ExecutePipelineForEachSourceFolderNames')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEachMetaData",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@array(pipeline().parameters.GetMetaDataOfSourceFolder)",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "IfConditionToFilterOutTheExcludedFiles",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@contains(array(pipeline().parameters.ExcludeFileNames),item().name)",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Append variable1",
												"type": "AppendVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "ListOfFilesAfterFilter",
													"value": {
														"value": "@item().name",
														"type": "Expression"
													}
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "ForEachMetaData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ListOfFinalFilestoBeCopied",
							"value": {
								"value": "@variables('ListOfFilesAfterFilter')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Notebook1",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/jyoti.srivastava@annik.com/rough",
							"baseParameters": {
								"abc": {
									"value": "[[\"a\",\"b\",\"c\"]",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "cglhlinkedservice_json",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"GetMetaDataOfSourceFolder": {
						"type": "array"
					},
					"ExcludeFileNames": {
						"type": "array"
					},
					"SourcePath": {
						"type": "string"
					},
					"SourceFolder": {
						"type": "string"
					},
					"SourceFileType": {
						"type": "string"
					}
				},
				"variables": {
					"ListOfFilesAfterFilter": {
						"type": "Array",
						"defaultValue": []
					},
					"ListOfFinalFilestoBeCopied": {
						"type": "Array",
						"defaultValue": []
					},
					"abc": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2020-08-25T18:14:17Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/cglhlinkedservice_json')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FilterForMultiExcludeFiles')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.MultiExcludeFile",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "FilterActivityInsideForEach",
									"type": "Filter",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"items": {
											"value": "@pipeline().parameters.GetMetaDataDetail",
											"type": "Expression"
										},
										"condition": {
											"value": "@not(contains(item().name,'sample_json1.json'))",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"GetMetaDataDetail": {
						"type": "array"
					},
					"MultiExcludeFile": {
						"type": "array"
					}
				},
				"folder": {
					"name": "Jyoti_Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2020-08-18T07:04:51Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ForEveryCSVTypeExcludeFiles')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetAllCSVFilesthatNeedToBeCopied",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.a1",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@or(contains(pipeline().parameters.a2,item().name),not(endswith(item().name,'csv')))",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Append variable1",
												"type": "AppendVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "a3",
													"value": {
														"value": "@item().name",
														"type": "Expression"
													}
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GetAllCSVFilesthatNeedToBeCopied",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ExcludeFileNames",
							"value": {
								"value": "@array(variables('a3'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach2",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('ExcludeFileNames')",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "CopyFilteredFiles",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"wildcardFolderPath": {
													"value": "@pipeline().parameters.SourceFolder",
													"type": "Expression"
												},
												"wildcardFileName": {
													"value": "@item()",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings",
												"copyBehavior": "PreserveHierarchy"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ""
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "CGLH_SourceCopyDataWithExcludeFunction",
											"type": "DatasetReference",
											"parameters": {
												"SourcePath": {
													"value": "@pipeline().parameters.SourcePath",
													"type": "Expression"
												},
												"SourceFolder": {
													"value": "@pipeline().parameters.SourceFolder",
													"type": "Expression"
												},
												"SourceFile": {
													"value": "@item()",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "CGLH_TargetExcludeFunction",
											"type": "DatasetReference",
											"parameters": {
												"TargetPath": {
													"value": "@pipeline().parameters.TargetPath",
													"type": "Expression"
												},
												"TargetFolder": {
													"value": "@pipeline().parameters.TargetFolder",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"a1": {
						"type": "array",
						"defaultValue": []
					},
					"a2": {
						"type": "array",
						"defaultValue": []
					},
					"SourcePath": {
						"type": "string",
						"defaultValue": "NULL"
					},
					"SourceFolder": {
						"type": "string",
						"defaultValue": "NULL"
					},
					"TargetPath": {
						"type": "string",
						"defaultValue": "NULL"
					},
					"TargetFolder": {
						"type": "string",
						"defaultValue": "NULL"
					}
				},
				"variables": {
					"a3": {
						"type": "Array"
					},
					"final": {
						"type": "Array"
					},
					"ExcludeFileNames": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "Jyoti_Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2020-08-19T06:16:04Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CGLH_SourceCopyDataWithExcludeFunction')]",
				"[concat(variables('factoryId'), '/datasets/CGLH_TargetExcludeFunction')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ForEveryJsonTypeExcludeFiles')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetAllJsonFilesthatNeedToBeCopied",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.a1",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@or(contains(pipeline().parameters.a2,item().name),not(endswith(item().name,'json')))",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Append variable1",
												"type": "AppendVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "a3",
													"value": {
														"value": "@item().name",
														"type": "Expression"
													}
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GetAllJsonFilesthatNeedToBeCopied",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ExcludeFileNames",
							"value": {
								"value": "@array(variables('a3'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach2",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('ExcludeFileNames')",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "CopyFilteredFiles",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"wildcardFolderPath": {
													"value": "@pipeline().parameters.SourceFolder",
													"type": "Expression"
												},
												"wildcardFileName": {
													"value": "@item()",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings",
												"copyBehavior": "PreserveHierarchy"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ""
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "CGLH_SourceCopyDataWithExcludeFunction",
											"type": "DatasetReference",
											"parameters": {
												"SourcePath": {
													"value": "@pipeline().parameters.SourcePath",
													"type": "Expression"
												},
												"SourceFolder": {
													"value": "@pipeline().parameters.SourceFolder",
													"type": "Expression"
												},
												"SourceFile": {
													"value": "@item()",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "CGLH_TargetExcludeFunction",
											"type": "DatasetReference",
											"parameters": {
												"TargetPath": {
													"value": "@pipeline().parameters.TargetPath",
													"type": "Expression"
												},
												"TargetFolder": {
													"value": "@pipeline().parameters.TargetFolder",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"a1": {
						"type": "array",
						"defaultValue": []
					},
					"a2": {
						"type": "array",
						"defaultValue": []
					},
					"SourcePath": {
						"type": "string",
						"defaultValue": "NULL"
					},
					"SourceFolder": {
						"type": "string",
						"defaultValue": "NULL"
					},
					"TargetPath": {
						"type": "string",
						"defaultValue": "NULL"
					},
					"TargetFolder": {
						"type": "string",
						"defaultValue": "NULL"
					}
				},
				"variables": {
					"a3": {
						"type": "Array"
					},
					"final": {
						"type": "Array"
					},
					"ExcludeFileNames": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "Jyoti_Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2020-08-19T06:28:46Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CGLH_SourceCopyDataWithExcludeFunction')]",
				"[concat(variables('factoryId'), '/datasets/CGLH_TargetExcludeFunction')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ForEveryParquetTypeExcludeFiles')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetAllParquetFilesthatNeedToBeCopied",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.a1",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@or(contains(pipeline().parameters.a2,item().name),not(endswith(item().name,'parquet')))",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Append variable1",
												"type": "AppendVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "a3",
													"value": {
														"value": "@item().name",
														"type": "Expression"
													}
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GetAllParquetFilesthatNeedToBeCopied",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ExcludeFileNames",
							"value": {
								"value": "@array(variables('a3'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach2",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('ExcludeFileNames')",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "CopyFilteredFiles",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"wildcardFolderPath": {
													"value": "@pipeline().parameters.SourceFolder",
													"type": "Expression"
												},
												"wildcardFileName": {
													"value": "@item()",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings",
												"copyBehavior": "PreserveHierarchy"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ""
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "CGLH_SourceCopyDataWithExcludeFunction",
											"type": "DatasetReference",
											"parameters": {
												"SourcePath": {
													"value": "@pipeline().parameters.SourcePath",
													"type": "Expression"
												},
												"SourceFolder": {
													"value": "@pipeline().parameters.SourceFolder",
													"type": "Expression"
												},
												"SourceFile": {
													"value": "@item()",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "CGLH_TargetExcludeFunction",
											"type": "DatasetReference",
											"parameters": {
												"TargetPath": {
													"value": "@pipeline().parameters.TargetPath",
													"type": "Expression"
												},
												"TargetFolder": {
													"value": "@pipeline().parameters.TargetFolder",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"a1": {
						"type": "array",
						"defaultValue": []
					},
					"a2": {
						"type": "array",
						"defaultValue": []
					},
					"SourcePath": {
						"type": "string",
						"defaultValue": "NULL"
					},
					"SourceFolder": {
						"type": "string",
						"defaultValue": "NULL"
					},
					"TargetPath": {
						"type": "string",
						"defaultValue": "NULL"
					},
					"TargetFolder": {
						"type": "string",
						"defaultValue": "NULL"
					}
				},
				"variables": {
					"a3": {
						"type": "Array"
					},
					"final": {
						"type": "Array"
					},
					"ExcludeFileNames": {
						"type": "Array"
					}
				},
				"annotations": [],
				"lastPublishTime": "2020-08-19T06:16:04Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CGLH_SourceCopyDataWithExcludeFunction')]",
				"[concat(variables('factoryId'), '/datasets/CGLH_TargetExcludeFunction')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LoadBlobToTable')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetSqlDetail",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select SourcePath,SourceFolder,SourceFileType,SQLTargetDatabase,SQLTargetUser,SQLTargetPassword,SQLTargetTable,ExcludeFiles,ColstoCopy from [cglhdatabase].[dbo].[CGConfiguration] \nwhere GroupName='CopyFiles_BLOBtoSQL' and ActiveFlag='y'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzuretoCGLHDBConnection",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GetSqlDetail",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetSqlDetail').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Notebook1",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Users/jyoti.srivastava@annik.com/rough",
										"baseParameters": {
											"SourcePath": {
												"value": "@item().SourcePath",
												"type": "Expression"
											},
											"SourceFolder": {
												"value": "@item().SourceFolder",
												"type": "Expression"
											},
											"SourceFileType": {
												"value": "@item().SourceFileType",
												"type": "Expression"
											},
											"ExcludeFileNames": {
												"value": "@item().ExcludeFiles",
												"type": "Expression"
											},
											"ColstoCopy": {
												"value": "@item().ColstoCopy",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "cglhlinkedservice_json",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Notebook1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ParquetSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"wildcardFolderPath": "2020/08/01/parquetToLoadToSQL",
												"wildcardFileName": "*.parquet"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"tableOption": "autoCreate"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "Dataset_ForLoadingParquetFromCGLHSRCtoGLHDB",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "AzureSqlDatabaseSinkDataset",
											"type": "DatasetReference",
											"parameters": {
												"sinkTableName": {
													"value": "@item().SQLTargetTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"variables": {
					"ExcludeFileNames": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "Jyoti_Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2020-08-30T16:41:22Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzuretoCGLHDBConnection')]",
				"[concat(variables('factoryId'), '/linkedServices/cglhlinkedservice_json')]",
				"[concat(variables('factoryId'), '/datasets/Dataset_ForLoadingParquetFromCGLHSRCtoGLHDB')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlDatabaseSinkDataset')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LoadBlobToTable_withMetaOption')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetSqlDetail",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select SourcePath,SourceFolder,SourceFileType,SQLTargetDatabase,SQLTargetUser,SQLTargetPassword,SQLTargetTable from [cglhdatabase].[dbo].[CGConfiguration] \nwhere GroupName='CopyFiles_BLOBtoSQL' and ActiveFlag='y'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzuretoCGLHDBConnection",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GetSqlDetail",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetSqlDetail').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "LoadBlobToTable",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Users/jyoti.srivastava@annik.com/LoadBlobToSql",
										"baseParameters": {
											"SourcePath": {
												"value": "@item().SourcePath",
												"type": "Expression"
											},
											"SourceFolder": {
												"value": "@item().SourceFolder",
												"type": "Expression"
											},
											"SourceFileType": {
												"value": "@item().SourceFileType",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "cglhlinkedservice_json",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Execute Pipeline1",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "LoadBlobToTable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "DumptoSqlParallel",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					}
				],
				"folder": {
					"name": "Jyoti_Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2020-08-23T18:29:23Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzuretoCGLHDBConnection')]",
				"[concat(variables('factoryId'), '/linkedServices/cglhlinkedservice_json')]",
				"[concat(variables('factoryId'), '/pipelines/DumptoSqlParallel')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MetaData_Lookup')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Last Modified Date",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Az_meta_csv",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"columnCount",
								"contentMD5",
								"exists",
								"itemName",
								"lastModified",
								"size",
								"structure"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					}
				],
				"folder": {
					"name": "Jyoti_Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2020-08-02T12:05:06Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Az_meta_csv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/NestedForEach')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.SourceFile",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "CopyFilteredFiles",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"wildcardFolderPath": {
													"value": "@pipeline().parameters.SourceFolder",
													"type": "Expression"
												},
												"wildcardFileName": {
													"value": "@item().name",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings",
												"copyBehavior": "PreserveHierarchy"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ""
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "CGLH_SourceCopyDataWithExcludeFunction",
											"type": "DatasetReference",
											"parameters": {
												"SourcePath": {
													"value": "@pipeline().parameters.SourcePath",
													"type": "Expression"
												},
												"SourceFolder": {
													"value": "@pipeline().parameters.SourceFolder",
													"type": "Expression"
												},
												"SourceFile": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "CGLH_TargetExcludeFunction",
											"type": "DatasetReference",
											"parameters": {
												"TargetPath": {
													"value": "@pipeline().parameters.TargetPath",
													"type": "Expression"
												},
												"TargetFolder": {
													"value": "@pipeline().parameters.TargetFolder",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"SourceFolder": {
						"type": "string"
					},
					"SourceFile": {
						"type": "array"
					},
					"SourcePath": {
						"type": "string"
					},
					"TargetPath": {
						"type": "string"
					},
					"TargetFolder": {
						"type": "string"
					}
				},
				"variables": {
					"abc": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Jyoti_Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2020-08-12T08:12:57Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CGLH_SourceCopyDataWithExcludeFunction')]",
				"[concat(variables('factoryId'), '/datasets/CGLH_TargetExcludeFunction')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Prateek_first_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Notebook1",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/jaglal.prasad@annik.com/Prateek_first"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-08-07T14:32:25Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_DB_METADATA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SQL_DB_METADATA",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select ParamName,ParamChar from [dbo].[Parameters] where ParamName in('copy_blobtoblob_sourcepath','copy_blobtoblob_targetpath','copy_blobtoblob_sourcefile') order by ParamId asc",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "az_sql_table",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "SQL_DB_METADATA",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@activity('SQL_DB_METADATA').output.value[0].ParamChar",
										"type": "Expression"
									},
									"wildcardFileName": {
										"value": "@activity('SQL_DB_METADATA').output.value[2].ParamChar",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "az_cglhsrc_path",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "az_chlhtarget_path",
								"type": "DatasetReference",
								"parameters": {
									"TargetPath": {
										"value": "@activity('SQL_DB_METADATA').output.value[1].ParamChar",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"folder": {
					"name": "Jyoti_Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2020-08-10T12:31:32Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/az_sql_table')]",
				"[concat(variables('factoryId'), '/datasets/az_cglhsrc_path')]",
				"[concat(variables('factoryId'), '/datasets/az_chlhtarget_path')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SetVariable')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.names",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Set variable1",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "name",
										"value": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"names": {
						"type": "array",
						"defaultValue": [
							"jyoti",
							"srivastva"
						]
					}
				},
				"variables": {
					"name": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Jyoti_Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2020-08-10T12:31:32Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ToCopyAllFilesExceptExcludedFiles')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetAllCSVFilesthatNeedToBeCopied",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.a1",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "IfConditionToFilterFilestoCopy",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@contains(pipeline().parameters.a2,item().name)",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Append variable1",
												"type": "AppendVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "a3",
													"value": {
														"value": "@item().name",
														"type": "Expression"
													}
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "SetvariableWithFinalFileNames",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GetAllCSVFilesthatNeedToBeCopied",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Final",
							"value": {
								"value": "@variables('a3')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach2",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "SetvariableWithFinalFileNames",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('a3')",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "CopyFilteredFiles",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"wildcardFolderPath": {
													"value": "@pipeline().parameters.SourceFolder",
													"type": "Expression"
												},
												"wildcardFileName": {
													"value": "@item()",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings",
												"copyBehavior": "PreserveHierarchy"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ""
											}
										},
										"enableStaging": false,
										"parallelCopies": 50,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "CGLH_SourceCopyDataWithExcludeFunction",
											"type": "DatasetReference",
											"parameters": {
												"SourcePath": {
													"value": "@pipeline().parameters.SourcePath",
													"type": "Expression"
												},
												"SourceFolder": {
													"value": "@pipeline().parameters.SourceFolder",
													"type": "Expression"
												},
												"SourceFile": {
													"value": "@item()",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "CGLH_TargetExcludeFunction",
											"type": "DatasetReference",
											"parameters": {
												"TargetPath": {
													"value": "@pipeline().parameters.TargetPath",
													"type": "Expression"
												},
												"TargetFolder": {
													"value": "@pipeline().parameters.TargetFolder",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"a1": {
						"type": "array"
					},
					"a2": {
						"type": "array"
					},
					"SourcePath": {
						"type": "string"
					},
					"SourceFolder": {
						"type": "string"
					},
					"TargetPath": {
						"type": "string"
					},
					"TargetFolder": {
						"type": "string"
					},
					"SourceFileType": {
						"type": "string"
					}
				},
				"variables": {
					"a3": {
						"type": "Array"
					},
					"Final": {
						"type": "Array"
					},
					"UpdateSourceTypeVariable": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Jyoti_Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2020-08-24T17:29:39Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CGLH_SourceCopyDataWithExcludeFunction')]",
				"[concat(variables('factoryId'), '/datasets/CGLH_TargetExcludeFunction')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ToCopyAllFilesExceptExcludedFilesForCJP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetAllCSVFilesthatNeedToBeCopied",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "UpdateSourceTypeVariable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.a1",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "IfConditionToFilterFilestoCopy",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@or(contains(pipeline().parameters.a2,item().name),not(endswith(item().name,variables('UpdateSourceTypeVariable'))))",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Append variable1",
												"type": "AppendVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "a3",
													"value": {
														"value": "@item().name",
														"type": "Expression"
													}
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "SetvariableWithFinalFileNames",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GetAllCSVFilesthatNeedToBeCopied",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Final",
							"value": {
								"value": "@variables('a3')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach2",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "SetvariableWithFinalFileNames",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('a3')",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "CopyFilteredFiles",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"wildcardFolderPath": {
													"value": "@pipeline().parameters.SourceFolder",
													"type": "Expression"
												},
												"wildcardFileName": {
													"value": "@item()",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings",
												"copyBehavior": "PreserveHierarchy"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ""
											}
										},
										"enableStaging": false,
										"parallelCopies": 50,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "CGLH_SourceCopyDataWithExcludeFunction",
											"type": "DatasetReference",
											"parameters": {
												"SourcePath": {
													"value": "@pipeline().parameters.SourcePath",
													"type": "Expression"
												},
												"SourceFolder": {
													"value": "@pipeline().parameters.SourceFolder",
													"type": "Expression"
												},
												"SourceFile": {
													"value": "@item()",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "CGLH_TargetExcludeFunction",
											"type": "DatasetReference",
											"parameters": {
												"TargetPath": {
													"value": "@pipeline().parameters.TargetPath",
													"type": "Expression"
												},
												"TargetFolder": {
													"value": "@pipeline().parameters.TargetFolder",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "UpdateSourceTypeVariable",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "UpdateSourceTypeVariable",
							"value": {
								"value": "@split(pipeline().parameters.SourceFileType,'.')[1]",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"a1": {
						"type": "array"
					},
					"a2": {
						"type": "array"
					},
					"SourcePath": {
						"type": "string"
					},
					"SourceFolder": {
						"type": "string"
					},
					"TargetPath": {
						"type": "string"
					},
					"TargetFolder": {
						"type": "string"
					},
					"SourceFileType": {
						"type": "string"
					}
				},
				"variables": {
					"a3": {
						"type": "Array"
					},
					"Final": {
						"type": "Array"
					},
					"UpdateSourceTypeVariable": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Jyoti_Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2020-08-24T17:21:33Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CGLH_SourceCopyDataWithExcludeFunction')]",
				"[concat(variables('factoryId'), '/datasets/CGLH_TargetExcludeFunction')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/az_folder_metadata_filter_foreach')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "az_folder_metadata",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "az_metadaa_folder",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems",
								"exists",
								"itemName",
								"itemType",
								"lastModified"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Filter_test_1",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "az_folder_metadata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('az_folder_metadata').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@startswith(item().name,'Personal')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filter_test_1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter_test_1').output.Value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "az_sp",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[sql_metadata_test_proc]",
										"storedProcedureParameters": {
											"filename": {
												"value": {
													"value": "@{item().type}",
													"type": "Expression"
												},
												"type": "String"
											},
											"lastmodifieddate": {
												"value": {
													"value": "@utcnow()",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"recordinserteddate": {
												"value": {
													"value": "@utcnow()",
													"type": "Expression"
												},
												"type": "DateTime"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "az_sql",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"folder": {
					"name": "Jyoti_Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2020-08-02T12:05:06Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/az_metadaa_folder')]",
				"[concat(variables('factoryId'), '/linkedServices/az_sql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/az_metadata_folder')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "az_metadata_folder",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "az_metadaa_folder",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems",
								"exists",
								"itemName",
								"itemType",
								"lastModified"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					}
				],
				"folder": {
					"name": "Jyoti_Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2020-08-02T12:05:06Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/az_metadaa_folder')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/az_sql_table')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "az_sql_table",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "az_sql_table",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"columnCount",
								"exists",
								"structure"
							]
						}
					}
				],
				"folder": {
					"name": "Jyoti_Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2020-08-02T12:05:06Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/az_sql_table')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/az_sqltable_metadata')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "az_sqltable_metadata",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "az_sql_table",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"columnCount",
								"exists",
								"structure"
							]
						}
					}
				],
				"folder": {
					"name": "Jyoti_Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2020-08-02T12:05:06Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/az_sql_table')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/cglh_onpremtoazurepipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_omk",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "dbo.FactSalesQuota"
							},
							{
								"name": "Destination",
								"value": "cglhcontainer//"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"validateDataConsistency": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_omk",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_omk",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-07-29T11:44:18Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_omk')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_omk')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/cglh_pipelinedatabricks')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "JSON_JSON_comparison",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/princy.raheja@annik.com/JSON_JSON_comparison"
						},
						"linkedServiceName": {
							"referenceName": "prepostdatabricks_linkedservice",
							"type": "LinkedServiceReference"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-08-04T12:37:12Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/prepostdatabricks_linkedservice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/cglh_pipelinejsonpost')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_tme",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "dbo.Factsalesquotapost"
							},
							{
								"name": "Destination",
								"value": "cglhcontainerpost/06/08/2020_FactSalesQuota"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SalesQuotaKey",
											"type": "Int32"
										},
										"sink": {
											"path": "$['SalesQuotaKey']"
										}
									},
									{
										"source": {
											"name": "EmployeeKey",
											"type": "Int32"
										},
										"sink": {
											"path": "$['EmployeeKey']"
										}
									},
									{
										"source": {
											"name": "DateKey",
											"type": "Int32"
										},
										"sink": {
											"path": "$['DateKey']"
										}
									},
									{
										"source": {
											"name": "CalendarYear",
											"type": "Int16"
										},
										"sink": {
											"path": "$['CalendarYear']"
										}
									},
									{
										"source": {
											"name": "CalendarQuarter",
											"type": "Byte"
										},
										"sink": {
											"path": "$['CalendarQuarter']"
										}
									},
									{
										"source": {
											"name": "SalesAmountQuota",
											"type": "Decimal"
										},
										"sink": {
											"path": "$['SalesAmountQuota']"
										}
									},
									{
										"source": {
											"name": "Date",
											"type": "DateTime"
										},
										"sink": {
											"path": "$['Date']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_tme",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_tme",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-08-05T20:42:57Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_tme')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_tme')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/cglh_pipelinejsonpre')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_ntp",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "dbo.FactSalesQuota"
							},
							{
								"name": "Destination",
								"value": "cglhcontainerpre/05/08/2020_FactSalesQuota"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SalesQuotaKey",
											"type": "Int32"
										},
										"sink": {
											"path": "$['SalesQuotaKey']"
										}
									},
									{
										"source": {
											"name": "EmployeeKey",
											"type": "Int32"
										},
										"sink": {
											"path": "$['EmployeeKey']"
										}
									},
									{
										"source": {
											"name": "DateKey",
											"type": "Int32"
										},
										"sink": {
											"path": "$['DateKey']"
										}
									},
									{
										"source": {
											"name": "CalendarYear",
											"type": "Int16"
										},
										"sink": {
											"path": "$['CalendarYear']"
										}
									},
									{
										"source": {
											"name": "CalendarQuarter",
											"type": "Byte"
										},
										"sink": {
											"path": "$['CalendarQuarter']"
										}
									},
									{
										"source": {
											"name": "SalesAmountQuota",
											"type": "Decimal"
										},
										"sink": {
											"path": "$['SalesAmountQuota']"
										}
									},
									{
										"source": {
											"name": "Date",
											"type": "DateTime"
										},
										"sink": {
											"path": "$['Date']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_ntp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_ntp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-08-05T20:20:19Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_ntp')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_ntp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/cglh_pipleinejsonpost')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_2ty",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "dbo.Factsalesquotapost"
							},
							{
								"name": "Destination",
								"value": "cglhcontainerpost//"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SalesQuotaKey",
											"type": "Int32"
										},
										"sink": {
											"path": "$['SalesQuotaKey']"
										}
									},
									{
										"source": {
											"name": "EmployeeKey",
											"type": "Int32"
										},
										"sink": {
											"path": "$['EmployeeKey']"
										}
									},
									{
										"source": {
											"name": "DateKey",
											"type": "Int32"
										},
										"sink": {
											"path": "$['DateKey']"
										}
									},
									{
										"source": {
											"name": "CalendarYear",
											"type": "Int16"
										},
										"sink": {
											"path": "$['CalendarYear']"
										}
									},
									{
										"source": {
											"name": "CalendarQuarter",
											"type": "Byte"
										},
										"sink": {
											"path": "$['CalendarQuarter']"
										}
									},
									{
										"source": {
											"name": "SalesAmountQuota",
											"type": "Decimal"
										},
										"sink": {
											"path": "$['SalesAmountQuota']"
										}
									},
									{
										"source": {
											"name": "Date",
											"type": "DateTime"
										},
										"sink": {
											"path": "$['Date']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_2ty",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_2ty",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-08-04T12:02:39Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_2ty')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_2ty')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/cglhpipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach_i8e",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.cw_items",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy_i8e",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "dbo.@{item().source.table}"
										},
										{
											"name": "Destination",
											"value": "dbo.@{item().destination.table}"
										}
									],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"validateDataConsistency": false
									},
									"inputs": [
										{
											"referenceName": "SourceDataset_i8e",
											"type": "DatasetReference",
											"parameters": {
												"cw_table": "@item().source.table"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DestinationDataset_i8e",
											"type": "DatasetReference",
											"parameters": {
												"cw_table": "@item().destination.table"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"tableOption": "autoCreate"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SalesOrderID"
										},
										"sink": {
											"name": "DBVersion"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"parameters": {
					"cw_items": {
						"type": "Array",
						"defaultValue": [
							{
								"source": {
									"table": "AdventureWorksDWBuildVersion"
								},
								"destination": {
									"table": "AdventureWorksDWBuildVersion"
								}
							},
							{
								"source": {
									"table": "DatabaseLog"
								},
								"destination": {
									"table": "DatabaseLog"
								}
							},
							{
								"source": {
									"table": "DimAccount"
								},
								"destination": {
									"table": "DimAccount"
								}
							},
							{
								"source": {
									"table": "DimCurrency"
								},
								"destination": {
									"table": "DimCurrency"
								}
							},
							{
								"source": {
									"table": "DimCustomer"
								},
								"destination": {
									"table": "DimCustomer"
								}
							},
							{
								"source": {
									"table": "DimDate"
								},
								"destination": {
									"table": "DimDate"
								}
							},
							{
								"source": {
									"table": "DimDepartmentGroup"
								},
								"destination": {
									"table": "DimDepartmentGroup"
								}
							},
							{
								"source": {
									"table": "DimEmployee"
								},
								"destination": {
									"table": "DimEmployee"
								}
							},
							{
								"source": {
									"table": "DimGeography"
								},
								"destination": {
									"table": "DimGeography"
								}
							},
							{
								"source": {
									"table": "DimOrganization"
								},
								"destination": {
									"table": "DimOrganization"
								}
							},
							{
								"source": {
									"table": "DimProduct"
								},
								"destination": {
									"table": "DimProduct"
								}
							},
							{
								"source": {
									"table": "DimProductCategory"
								},
								"destination": {
									"table": "DimProductCategory"
								}
							},
							{
								"source": {
									"table": "DimProductSubcategory"
								},
								"destination": {
									"table": "DimProductSubcategory"
								}
							},
							{
								"source": {
									"table": "DimPromotion"
								},
								"destination": {
									"table": "DimPromotion"
								}
							},
							{
								"source": {
									"table": "DimReseller"
								},
								"destination": {
									"table": "DimReseller"
								}
							},
							{
								"source": {
									"table": "DimSalesReason"
								},
								"destination": {
									"table": "DimSalesReason"
								}
							},
							{
								"source": {
									"table": "DimSalesTerritory"
								},
								"destination": {
									"table": "DimSalesTerritory"
								}
							},
							{
								"source": {
									"table": "DimScenario"
								},
								"destination": {
									"table": "DimScenario"
								}
							},
							{
								"source": {
									"table": "FactAdditionalInternationalProductDescription"
								},
								"destination": {
									"table": "FactAdditionalInternationalProductDescription"
								}
							},
							{
								"source": {
									"table": "FactCallCenter"
								},
								"destination": {
									"table": "FactCallCenter"
								}
							},
							{
								"source": {
									"table": "FactCurrencyRate"
								},
								"destination": {
									"table": "FactCurrencyRate"
								}
							},
							{
								"source": {
									"table": "FactFinance"
								},
								"destination": {
									"table": "FactFinance"
								}
							},
							{
								"source": {
									"table": "FactInternetSales"
								},
								"destination": {
									"table": "FactInternetSales"
								}
							},
							{
								"source": {
									"table": "FactInternetSalesReason"
								},
								"destination": {
									"table": "FactInternetSalesReason"
								}
							},
							{
								"source": {
									"table": "FactProductInventory"
								},
								"destination": {
									"table": "FactProductInventory"
								}
							},
							{
								"source": {
									"table": "FactResellerSales"
								},
								"destination": {
									"table": "FactResellerSales"
								}
							},
							{
								"source": {
									"table": "FactSalesQuota"
								},
								"destination": {
									"table": "FactSalesQuota"
								}
							},
							{
								"source": {
									"table": "FactSurveyResponse"
								},
								"destination": {
									"table": "FactSurveyResponse"
								}
							},
							{
								"source": {
									"table": "NewFactCurrencyRate"
								},
								"destination": {
									"table": "NewFactCurrencyRate"
								}
							},
							{
								"source": {
									"table": "ProspectiveBuyer"
								},
								"destination": {
									"table": "ProspectiveBuyer"
								}
							}
						]
					}
				},
				"annotations": [],
				"lastPublishTime": "2020-07-28T07:23:14Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable2')]",
				"[concat(variables('factoryId'), '/datasets/SourceDataset_i8e')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_i8e')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/cglhpipeline_CompareData_JSONtoJSON')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "cglhpipeline_CompareData_JSONtoJSON",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "1.05:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/jyoti.srivastava@annik.com/Json_Json_Comparision"
						},
						"linkedServiceName": {
							"referenceName": "cglhlinkedservice_json3",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "Jyoti_Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2020-08-07T10:26:12Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/cglhlinkedservice_json3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/cglhpipeline_CompareData_JSONtoSQL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "cglhpipeline_CompareData_JSONtoSQL",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "1.05:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/jyoti.srivastava@annik.com/Json_Sql_Comparision"
						},
						"linkedServiceName": {
							"referenceName": "cglhlinkedservice_json3",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "Jyoti_Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2020-08-02T12:05:06Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/cglhlinkedservice_json3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/cglhpipeline_CopyData_BlobToBlob_Parameterized')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SQL_DB_METADATA",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select ParamName,ParamChar from [dbo].[Parameters] where ParamName in('copy_blobtoblob_sourcepath','copy_blobtoblob_targetpath','copy_blobtoblob_sourcefile') order by ParamId asc",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "az_sql_table",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Copy data Blob to Blob",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "SQL_DB_METADATA",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@activity('SQL_DB_METADATA').output.value[0].ParamChar",
										"type": "Expression"
									},
									"wildcardFileName": {
										"value": "@activity('SQL_DB_METADATA').output.value[2].ParamChar",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "az_cglhsrc_path",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "az_chlhtarget_path",
								"type": "DatasetReference",
								"parameters": {
									"TargetPath": {
										"value": "@activity('SQL_DB_METADATA').output.value[1].ParamChar",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"folder": {
					"name": "Jyoti_Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2020-08-10T12:31:32Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/az_sql_table')]",
				"[concat(variables('factoryId'), '/datasets/az_cglhsrc_path')]",
				"[concat(variables('factoryId'), '/datasets/az_chlhtarget_path')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/cglhpipeline_CopyData_BlobToBlob_unparametrized')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "cglhpipeline_CopyData_BlobToBlob_v2",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "cglhsrc//"
							},
							{
								"name": "Destination",
								"value": "cglhtgt//"
							}
						],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								}
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": false,
							"skipErrorFile": {
								"fileMissing": true
							},
							"validateDataConsistency": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_906",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_906",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "Jyoti_Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2020-08-13T10:42:15Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_906')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_906')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/cglhpipeline_jsonpre')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_5qz",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "dbo.FactSalesQuota"
							},
							{
								"name": "Destination",
								"value": "cglhcontainer//"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SalesQuotaKey",
											"type": "Int32"
										},
										"sink": {
											"path": "$['SalesQuotaKey']"
										}
									},
									{
										"source": {
											"name": "EmployeeKey",
											"type": "Int32"
										},
										"sink": {
											"path": "$['EmployeeKey']"
										}
									},
									{
										"source": {
											"name": "DateKey",
											"type": "Int32"
										},
										"sink": {
											"path": "$['DateKey']"
										}
									},
									{
										"source": {
											"name": "CalendarYear",
											"type": "Int16"
										},
										"sink": {
											"path": "$['CalendarYear']"
										}
									},
									{
										"source": {
											"name": "CalendarQuarter",
											"type": "Byte"
										},
										"sink": {
											"path": "$['CalendarQuarter']"
										}
									},
									{
										"source": {
											"name": "SalesAmountQuota",
											"type": "Decimal"
										},
										"sink": {
											"path": "$['SalesAmountQuota']"
										}
									},
									{
										"source": {
											"name": "Date",
											"type": "DateTime"
										},
										"sink": {
											"path": "$['Date']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_5qz",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_5qz",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-08-04T11:54:40Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_5qz')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_5qz')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/cglhpipeline_postdata')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_ig5",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "dbo.Factsalesquotapost"
							},
							{
								"name": "Destination",
								"value": "cglhcontainerpost//"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"validateDataConsistency": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_ig5",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_ig5",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-07-29T15:08:23Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_ig5')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_ig5')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/cglhpipeline_predata')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_ta5",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "dbo.FactSalesQuota"
							},
							{
								"name": "Destination",
								"value": "cglhcontainer//"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"validateDataConsistency": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_ta5",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_ta5",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-07-29T16:06:15Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_ta5')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_ta5')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/cglhpipeline_prepostdatabricks')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Pre_Post_comparison",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/princy.raheja@annik.com/preandpost_comparison_from_blob"
						},
						"linkedServiceName": {
							"referenceName": "prepostdatabricks_linkedservice",
							"type": "LinkedServiceReference"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-07-29T18:02:17Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/prepostdatabricks_linkedservice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/cglhpipeline_sqltoazurepost')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_oxk",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "dbo.Factsalesquotapost"
							},
							{
								"name": "Destination",
								"value": "cglhcontainerpost//"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"validateDataConsistency": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_oxk",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_oxk",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-07-29T13:39:32Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_oxk')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_oxk')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/cglhpipeline_sqltoazurepre')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_e7f",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "dbo.Factsalesquotapost"
							},
							{
								"name": "Destination",
								"value": "cglhcontainer//"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"validateDataConsistency": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_e7f",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_e7f",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-07-29T15:02:42Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_e7f')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_e7f')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/copy_BLOBtoBLOB_Parameterize')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetParameterFromSQL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select SourceFolder,SourceFileTYpe,TargetFolder,TargetFileTYpe from [dbo].[CGConfiguration] where ParamName='CopyJSON_BLOBtoBLOB'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlTable3",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Copy_BLOBtoBLOB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "GetParameterFromSQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@activity('GetParameterFromSQL').output.value[0].SourceFolder",
										"type": "Expression"
									},
									"wildcardFileName": {
										"value": "@activity('GetParameterFromSQL').output.value[0].SourceFileTYpe",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ""
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "az_cglhsrc_path",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "az_chlhtarget_path",
								"type": "DatasetReference",
								"parameters": {
									"TargetPath": {
										"value": "@activity('GetParameterFromSQL').output.value[0].TargetFolder",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"folder": {
					"name": "Jyoti_Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2020-08-10T12:31:32Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable3')]",
				"[concat(variables('factoryId'), '/datasets/az_cglhsrc_path')]",
				"[concat(variables('factoryId'), '/datasets/az_chlhtarget_path')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/copysqltoblob')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_2lq",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "dbo.DimCustomer"
							},
							{
								"name": "Destination",
								"value": "cglhcontainerpre//"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CustomerKey",
											"type": "Int32"
										},
										"sink": {
											"path": "$['CustomerKey']"
										}
									},
									{
										"source": {
											"name": "GeographyKey",
											"type": "Int32"
										},
										"sink": {
											"path": "$['GeographyKey']"
										}
									},
									{
										"source": {
											"name": "CustomerAlternateKey",
											"type": "String"
										},
										"sink": {
											"path": "$['CustomerAlternateKey']"
										}
									},
									{
										"source": {
											"name": "Title",
											"type": "String"
										},
										"sink": {
											"path": "$['Title']"
										}
									},
									{
										"source": {
											"name": "FirstName",
											"type": "String"
										},
										"sink": {
											"path": "$['FirstName']"
										}
									},
									{
										"source": {
											"name": "MiddleName",
											"type": "String"
										},
										"sink": {
											"path": "$['MiddleName']"
										}
									},
									{
										"source": {
											"name": "AddressLine1",
											"type": "String"
										},
										"sink": {
											"path": "$['AddressLine1']"
										}
									},
									{
										"source": {
											"name": "AddressLine2",
											"type": "String"
										},
										"sink": {
											"path": "$['AddressLine2']"
										}
									},
									{
										"source": {
											"name": "Phone",
											"type": "String"
										},
										"sink": {
											"path": "$['Phone']"
										}
									},
									{
										"source": {
											"name": "DateFirstPurchase",
											"type": "DateTime"
										},
										"sink": {
											"path": "$['DateFirstPurchase']"
										}
									},
									{
										"source": {
											"name": "CommuteDistance",
											"type": "String"
										},
										"sink": {
											"path": "$['CommuteDistance']"
										}
									},
									{
										"source": {
											"name": "FrenchEducation",
											"type": "String"
										},
										"sink": {
											"path": "$['FrenchEducation']"
										}
									},
									{
										"source": {
											"name": "EnglishOccupation",
											"type": "String"
										},
										"sink": {
											"path": "$['EnglishOccupation']"
										}
									},
									{
										"source": {
											"name": "SpanishOccupation",
											"type": "String"
										},
										"sink": {
											"path": "$['SpanishOccupation']"
										}
									},
									{
										"source": {
											"name": "FrenchOccupation",
											"type": "String"
										},
										"sink": {
											"path": "$['FrenchOccupation']"
										}
									},
									{
										"source": {
											"name": "HouseOwnerFlag",
											"type": "String"
										},
										"sink": {
											"path": "$['HouseOwnerFlag']"
										}
									},
									{
										"source": {
											"name": "NumberCarsOwned",
											"type": "Byte"
										},
										"sink": {
											"path": "$['NumberCarsOwned']"
										}
									},
									{
										"source": {
											"name": "EmailAddress",
											"type": "String"
										},
										"sink": {
											"path": "$['EmailAddress']"
										}
									},
									{
										"source": {
											"name": "YearlyIncome",
											"type": "Decimal"
										},
										"sink": {
											"path": "$['YearlyIncome']"
										}
									},
									{
										"source": {
											"name": "TotalChildren",
											"type": "Byte"
										},
										"sink": {
											"path": "$['TotalChildren']"
										}
									},
									{
										"source": {
											"name": "NumberChildrenAtHome",
											"type": "Byte"
										},
										"sink": {
											"path": "$['NumberChildrenAtHome']"
										}
									},
									{
										"source": {
											"name": "EnglishEducation",
											"type": "String"
										},
										"sink": {
											"path": "$['EnglishEducation']"
										}
									},
									{
										"source": {
											"name": "SpanishEducation",
											"type": "String"
										},
										"sink": {
											"path": "$['SpanishEducation']"
										}
									},
									{
										"source": {
											"name": "LastName",
											"type": "String"
										},
										"sink": {
											"path": "$['LastName']"
										}
									},
									{
										"source": {
											"name": "NameStyle",
											"type": "Boolean"
										},
										"sink": {
											"path": "$['NameStyle']"
										}
									},
									{
										"source": {
											"name": "BirthDate",
											"type": "DateTime"
										},
										"sink": {
											"path": "$['BirthDate']"
										}
									},
									{
										"source": {
											"name": "MaritalStatus",
											"type": "String"
										},
										"sink": {
											"path": "$['MaritalStatus']"
										}
									},
									{
										"source": {
											"name": "Suffix",
											"type": "String"
										},
										"sink": {
											"path": "$['Suffix']"
										}
									},
									{
										"source": {
											"name": "Gender",
											"type": "String"
										},
										"sink": {
											"path": "$['Gender']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_2lq",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_2lq",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-08-18T19:01:51Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_2lq')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_2lq')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/file_metadata_lookup_if')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Last Execution date",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[sql_Getlastmodifieddate_proc]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "az_sql_table",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "last modified date",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Az_meta_csv",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"columnCount",
								"contentMD5",
								"exists",
								"itemName",
								"itemType",
								"lastModified",
								"size",
								"structure"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "If_Test",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Last Execution date",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "last modified date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(\nactivity('last modified date').output.lastModified,\nactivity('Last Execution date').output.firstRow.lastmodifieddate\n)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Wait_false",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 1
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Wait_true",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 1
									}
								}
							]
						}
					}
				],
				"folder": {
					"name": "Jyoti_Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2020-08-02T12:05:06Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/az_sql_table')]",
				"[concat(variables('factoryId'), '/datasets/Az_meta_csv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/insetingdynamicparameterintoproc')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "insetingdynamicparameterintoProc",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "File_metadata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sql_metadata_test_proc]",
							"storedProcedureParameters": {
								"filename": {
									"value": {
										"value": "@activity('File_metadata').output.itemName",
										"type": "Expression"
									},
									"type": "String"
								},
								"lastmodifieddate": {
									"value": {
										"value": "@activity('File_metadata').output.lastModified",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"recordinserteddate": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "az_sql",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "File_metadata",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Az_meta_csv",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"columnCount",
								"contentMD5",
								"exists",
								"itemName",
								"itemType",
								"lastModified",
								"size",
								"structure"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					}
				],
				"folder": {
					"name": "Jyoti_Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2020-08-02T12:05:06Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/az_sql')]",
				"[concat(variables('factoryId'), '/datasets/Az_meta_csv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/loadblobtotable_new')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_85c",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "dbo.FBI_Configuration"
							},
							{
								"name": "Destination",
								"value": "fbisrc//"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"validateDataConsistency": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_85c",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_85c",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_85c')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_85c')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/nestedForEachForExcludFiles')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.a1",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@contains(pipeline().parameters.a2,item().name)",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Append variable1",
												"type": "AppendVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "a3",
													"value": {
														"value": "@item().name",
														"type": "Expression"
													}
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ExcludeFileNames",
							"value": {
								"value": "@array(variables('a3'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach2",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('ExcludeFileNames')",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "CopyFilteredFiles",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"wildcardFolderPath": {
													"value": "@pipeline().parameters.SourceFolder",
													"type": "Expression"
												},
												"wildcardFileName": {
													"value": "@item()",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings",
												"copyBehavior": "PreserveHierarchy"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ""
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "CGLH_SourceCopyDataWithExcludeFunction",
											"type": "DatasetReference",
											"parameters": {
												"SourcePath": {
													"value": "@pipeline().parameters.SourcePath",
													"type": "Expression"
												},
												"SourceFolder": {
													"value": "@pipeline().parameters.SourceFolder",
													"type": "Expression"
												},
												"SourceFile": {
													"value": "@item()",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "CGLH_TargetExcludeFunction",
											"type": "DatasetReference",
											"parameters": {
												"TargetPath": {
													"value": "@pipeline().parameters.TargetPath",
													"type": "Expression"
												},
												"TargetFolder": {
													"value": "@pipeline().parameters.TargetFolder",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"a1": {
						"type": "array",
						"defaultValue": []
					},
					"a2": {
						"type": "array",
						"defaultValue": []
					},
					"SourcePath": {
						"type": "string",
						"defaultValue": "NULL"
					},
					"SourceFolder": {
						"type": "string",
						"defaultValue": "NULL"
					},
					"TargetPath": {
						"type": "string",
						"defaultValue": "NULL"
					},
					"TargetFolder": {
						"type": "string",
						"defaultValue": "NULL"
					}
				},
				"variables": {
					"a3": {
						"type": "Array"
					},
					"final": {
						"type": "Array"
					},
					"ExcludeFileNames": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "Jyoti_Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2020-08-19T05:13:32Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CGLH_SourceCopyDataWithExcludeFunction')]",
				"[concat(variables('factoryId'), '/datasets/CGLH_TargetExcludeFunction')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-09-11T10:51:46Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipelineWithTwoExecutionPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(pipeline().parameters.SourceFileType,'*')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "ExecutePipelineForCJP",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "ToCopyAllFilesExceptExcludedFilesForCJP",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"a1": {
												"value": "@pipeline().parameters.a1",
												"type": "Expression"
											},
											"a2": {
												"value": "@pipeline().parameters.a2",
												"type": "Expression"
											},
											"SourcePath": {
												"value": "@pipeline().parameters.SourcePath",
												"type": "Expression"
											},
											"SourceFolder": {
												"value": "@pipeline().parameters.SourceFolder",
												"type": "Expression"
											},
											"TargetPath": {
												"value": "@pipeline().parameters.TargetPath",
												"type": "Expression"
											},
											"TargetFolder": {
												"value": "@pipeline().parameters.TargetFolder",
												"type": "Expression"
											},
											"SourceFileType": {
												"value": "@pipeline().parameters.SourceFileType",
												"type": "Expression"
											}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "ExecutePipelineForStartFiles",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "ToCopyAllFilesExceptExcludedFiles",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"a1": {
												"value": "@pipeline().parameters.a1",
												"type": "Expression"
											},
											"a2": {
												"value": "@pipeline().parameters.a2",
												"type": "Expression"
											},
											"SourcePath": {
												"value": "@pipeline().parameters.SourcePath",
												"type": "Expression"
											},
											"SourceFolder": {
												"value": "@pipeline().parameters.SourceFolder",
												"type": "Expression"
											},
											"TargetPath": {
												"value": "@pipeline().parameters.TargetPath",
												"type": "Expression"
											},
											"TargetFolder": {
												"value": "@pipeline().parameters.TargetFolder",
												"type": "Expression"
											},
											"SourceFileType": {
												"value": "@pipeline().parameters.SourceFileType",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"SourceFileType": {
						"type": "string"
					},
					"a1": {
						"type": "array"
					},
					"a2": {
						"type": "array"
					},
					"SourcePath": {
						"type": "string"
					},
					"SourceFolder": {
						"type": "string"
					},
					"TargetPath": {
						"type": "string"
					},
					"TargetFolder": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2020-08-24T17:27:40Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/ToCopyAllFilesExceptExcludedFilesForCJP')]",
				"[concat(variables('factoryId'), '/pipelines/ToCopyAllFilesExceptExcludedFiles')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/test')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetSqlTableDetailForFileComparision",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select a.ParamName,a.SourcePath,a.SourceFolder,a.SourceFileType_New as SourceFileType,a.TargetPath,a.TargetFolder,a.TargetFileType,a.ResultSourcePath,a.ResultSourceFolder,a.ResultFileType\n,a.ActiveFlag, a.Priority,a.ColstoCompare,a.KeyColumns  from (\nselect ParamName,SourcePath,SourceFolder,SourceFileType,TargetPath,TargetFolder,TargetFileType,ResultSourcePath,ResultSourceFolder,ResultFileType, ActiveFlag,Priority,ColstoCompare,KeyColumns, CASE \n\t\t\t\tWHEN (SourceFileType is NULL) THEN '*'\n\t\t\t\tELSE SourceFileType\n\t\t\t\tend as SourceFileType_New \n\t\t\t\tfrom [cglhdatabase].[dbo].[CGConfiguration] \nwhere GroupName='CompareFiles' and ActiveFlag = 'Y') a order by Priority",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlTable3",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GetSqlTableDetailForFileComparision",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetSqlTableDetailForFileComparision').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Compare_File_Parameterize",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Users/jyoti.srivastava@annik.com/File_Comparision",
										"baseParameters": {
											"SourcePath": {
												"value": "@item().SourcePath",
												"type": "Expression"
											},
											"SourceFolder": {
												"value": "@item().SourceFolder",
												"type": "Expression"
											},
											"SourceFileType": {
												"value": "@item().SourceFileType",
												"type": "Expression"
											},
											"TargetPath": {
												"value": "@item().TargetPath",
												"type": "Expression"
											},
											"TargetFolder": {
												"value": "@item().TargetFolder",
												"type": "Expression"
											},
											"ResultSourcePath": {
												"value": "@item().ResultSourcePath",
												"type": "Expression"
											},
											"ResultSourceFolder": {
												"value": "@item().ResultSourceFolder",
												"type": "Expression"
											},
											"ResultSourceFileType": {
												"value": "@item().ResultFileType",
												"type": "Expression"
											},
											"ColstoCompare": {
												"value": "@item().ColstoCompare",
												"type": "Expression"
											},
											"KeyCols": {
												"value": "@item().KeyColumns",
												"type": "Expression"
											},
											"TargetFileType": {
												"value": "@item().TargetFileType",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "cglhADFtoDatabricks",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"folder": {
					"name": "Jyoti_Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2020-09-01T15:01:22Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable3')]",
				"[concat(variables('factoryId'), '/linkedServices/cglhADFtoDatabricks')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/testpipleine')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_1v9",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "dbo.DimAccount"
							},
							{
								"name": "Destination",
								"value": "cglhcontainer//"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "AccountKey",
											"type": "Int32"
										},
										"sink": {
											"path": "$['AccountKey']"
										}
									},
									{
										"source": {
											"name": "ParentAccountKey",
											"type": "Int32"
										},
										"sink": {
											"path": "$['ParentAccountKey']"
										}
									},
									{
										"source": {
											"name": "AccountCodeAlternateKey",
											"type": "Int32"
										},
										"sink": {
											"path": "$['AccountCodeAlternateKey']"
										}
									},
									{
										"source": {
											"name": "ParentAccountCodeAlternateKey",
											"type": "Int32"
										},
										"sink": {
											"path": "$['ParentAccountCodeAlternateKey']"
										}
									},
									{
										"source": {
											"name": "AccountDescription",
											"type": "String"
										},
										"sink": {
											"path": "$['AccountDescription']"
										}
									},
									{
										"source": {
											"name": "AccountType",
											"type": "String"
										},
										"sink": {
											"path": "$['AccountType']"
										}
									},
									{
										"source": {
											"name": "Operator",
											"type": "String"
										},
										"sink": {
											"path": "$['Operator']"
										}
									},
									{
										"source": {
											"name": "CustomMembers",
											"type": "String"
										},
										"sink": {
											"path": "$['CustomMembers']"
										}
									},
									{
										"source": {
											"name": "ValueType",
											"type": "String"
										},
										"sink": {
											"path": "$['ValueType']"
										}
									},
									{
										"source": {
											"name": "CustomMemberOptions",
											"type": "String"
										},
										"sink": {
											"path": "$['CustomMemberOptions']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_1v9",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_1v9",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-08-04T11:08:43Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_1v9')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_1v9')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Az_meta_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "az_meta_csv_linkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Personal_Loan_Dataset_Bank_Personal_Loan_Sample_Dataset.csv",
						"container": "cglhsrc"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/az_meta_csv_linkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabaseSinkDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Connection to your destination data store.",
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_csvtosql",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"sinkTableName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().sinkTableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase_csvtosql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDumpDB')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDumpDB_LS",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"TargetTableName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().TargetTableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDumpDB_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "cglhlinkedservice",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "SalesOrderID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SalesOrderDetailID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "OrderQty",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "ProductID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "UnitPrice",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "UnitPriceDiscount",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "LineTotal",
						"type": "decimal",
						"precision": 38,
						"scale": 6
					},
					{
						"name": "rowguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "SalesLT",
					"table": "SalesOrderDetail"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/cglhlinkedservice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "cglhlinkedservicenew",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "DBVersion",
						"type": "nvarchar"
					},
					{
						"name": "VersionDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "AdventureWorksDWBuildVersion"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/cglhlinkedservicenew')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AZ_CGLHDB_LinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "CGConfiguration"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AZ_CGLHDB_LinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzuretoCGLHDBConnection')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_csvtosql",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": ""
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase_csvtosql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BinaryDataDestinationStore')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Connection to your data destination store.  ",
				"linkedServiceName": {
					"referenceName": "cglh_trg_adf_pipeline_linkedservice",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Container": {
						"type": "string"
					},
					"Directory": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@dataset().Directory",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().Container",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/cglh_trg_adf_pipeline_linkedservice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BinaryDataDestinationStore1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Connection to your data destination store.  ",
				"linkedServiceName": {
					"referenceName": "cglh_adf_to_blob_linkedservice",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Container": {
						"type": "string"
					},
					"Directory": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@dataset().Directory",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().Container",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/cglh_adf_to_blob_linkedservice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BinaryDataSourceStore')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Connection to your data source store. ",
				"linkedServiceName": {
					"referenceName": "cglh_src_adf_pipeline_linkedservice",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Container": {
						"type": "string"
					},
					"Directory": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@dataset().Directory",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().Container",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/cglh_src_adf_pipeline_linkedservice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BinarySinkFileStore')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Connection to your destination data store.",
				"linkedServiceName": {
					"referenceName": "cglhlinkedservice_TargetBlob",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"container": {
						"type": "string"
					},
					"directory": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@dataset().directory",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().container",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/cglhlinkedservice_TargetBlob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BinarySinkFileStore1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Connection to your destination data store.",
				"linkedServiceName": {
					"referenceName": "cglhlinkedservice_TargetBlob",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"container": {
						"type": "string"
					},
					"directory": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@dataset().directory",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().container",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/cglhlinkedservice_TargetBlob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BinarySourceFileStore')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Connection to your source data store.",
				"linkedServiceName": {
					"referenceName": "cglhlinkedservice_SourceBlob",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"container": {
						"type": "string"
					},
					"directory": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@dataset().directory",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().container",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/cglhlinkedservice_SourceBlob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CGLHSourceCSVType')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "cglhlinkedservice_Source_Blob",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SourcePath": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": {
							"value": "@dataset().SourcePath",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/cglhlinkedservice_Source_Blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CGLHTargetCSVType')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "cglhlinkedservice_Source_Blob",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"TargetPath": {
						"type": "string"
					},
					"TargetFolder": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@dataset().TargetFolder",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().TargetPath",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/cglhlinkedservice_Source_Blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CGLH_SourceCopyDataWithExcludeFunction')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "cglhlinkedservice_Source_Blob",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SourcePath": {
						"type": "string"
					},
					"SourceFolder": {
						"type": "string"
					},
					"SourceFile": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().SourceFile",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().SourceFolder",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().SourcePath",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/cglhlinkedservice_Source_Blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CGLH_TargetExcludeFunction')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "cglhlinkedservice_Source_Blob",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"TargetPath": {
						"type": "string"
					},
					"TargetFolder": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@dataset().TargetFolder",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().TargetPath",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/cglhlinkedservice_Source_Blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DatasetForCGLHSRCSourceFolder')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "cglhlinkedservice_Source_Blob",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SourcePath": {
						"type": "string"
					},
					"SourceFolder": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@dataset().SourceFolder",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().SourcePath",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/cglhlinkedservice_Source_Blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DatasetForCGLHTGTSourceFolder')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "cglhlinkedservice_Target_BLOB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "temp_BlobtoSql_Files",
						"container": "chlhsrc"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/cglhlinkedservice_Target_BLOB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DatasetForCopyBlobtoSQL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "cglhlinkedservice_Source_Blob",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "ParquetToLoadInSQLTable",
						"folderPath": "2020/08/01",
						"container": "cglhsrc"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/cglhlinkedservice_Source_Blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dataset_ForLoadingParquetFromCGLHSRCtoGLHDB')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "cglhlinkedservice_Source_Blob",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "2020/08/01/parquetToLoadToSQL",
						"container": "cglhsrc"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/cglhlinkedservice_Source_Blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText11111')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "cglhlinkedservice_Source_Blob",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "2020/ParquetToLoadInSQLTable_v1",
						"container": "cglhsrc"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/cglhlinkedservice_Source_Blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_1v9')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureStorageLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "cglhcontainer"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureStorageLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_1vt')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "cglhcontainerpre"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_2lq')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "onpremtosql",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "cglhcontainerpre"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/onpremtosql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_2ty')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureStorageLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "cglhcontainerpost"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureStorageLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_4ph')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "cglhTargetLocation",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "clghtarget"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/cglhTargetLocation')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_5qz')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureStorageLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "cglhcontainer"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureStorageLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_85c')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "loadblobtosql_blobnew",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "fbisrc"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/loadblobtosql_blobnew')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_8e4')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_csvtosql",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Transaction_date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Product",
						"type": "text"
					},
					{
						"name": "Price",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "Payment_Type",
						"type": "text"
					},
					{
						"name": "Name",
						"type": "text"
					},
					{
						"name": "City",
						"type": "text"
					},
					{
						"name": "State",
						"type": "text"
					},
					{
						"name": "Country",
						"type": "text"
					},
					{
						"name": "Account_Created",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Last_Login",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Latitude",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "Longitude",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "dl_sales"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase_csvtosql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_906')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "cglh_adf_to_blob_linkedservice",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "cglhtgt"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/cglh_adf_to_blob_linkedservice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_d1w')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "cglh_adf_to_blob_linkedservice",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "cglhtgt"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/cglh_adf_to_blob_linkedservice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_e7f')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureStorageLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "cglhcontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureStorageLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_gwe')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "az_sql",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "",
					"table": "Azure Blob Storage file"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/az_sql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_i1h')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureStorageLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "cglhcontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureStorageLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_i8e')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "cglhlinkedservicenew",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_table": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().cw_table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/cglhlinkedservicenew')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_ig5')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureStorageLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "cglhcontainerpost"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureStorageLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_ntp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage_pre",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "2020_FactSalesQuota",
						"folderPath": "05/08",
						"container": "cglhcontainerpre"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage_pre')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_omk')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureStorageLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "cglhcontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureStorageLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_oxk')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureStorageLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "cglhcontainerpost"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureStorageLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_p2c')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "cglh_azuresqldatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "dl_sales"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/cglh_azuresqldatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_py1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureStorageLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "cglhcontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureStorageLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_q1d')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureStorageLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "cglhcontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureStorageLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_ta5')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureStorageLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "cglhcontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureStorageLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_tme')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureStorageLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "2020_FactSalesQuota",
						"folderPath": "06/08",
						"container": "cglhcontainerpost"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureStorageLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GetMetadataDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Connection to your source data store.",
				"linkedServiceName": {
					"referenceName": "AzureSourceBlob",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SourceContainer": {
						"type": "string"
					},
					"SourceDirectory": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().SourceDirectory",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().SourceContainer",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSourceBlob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GetMetadataOfBlobStorage')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "cglhlinkedservice_Source_Blob",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SourcePath": {
						"type": "string"
					},
					"SourceFolder": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@dataset().SourceFolder",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().SourcePath",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/cglhlinkedservice_Source_Blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "cglhlinkedservice_Source_Blob",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "2020",
						"container": "cglhcontainer"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"$schema": {
							"type": "string"
						},
						"contentVersion": {
							"type": "string"
						},
						"parameters": {
							"type": "object",
							"properties": {
								"servers_cgpocdbserverdbrscala_name": {
									"type": "object",
									"properties": {
										"defaultValue": {
											"type": "string"
										},
										"type": {
											"type": "string"
										}
									}
								}
							}
						},
						"variables": {
							"type": "object"
						},
						"resources": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"type": {
										"type": "string"
									},
									"apiVersion": {
										"type": "string"
									},
									"name": {
										"type": "string"
									},
									"location": {
										"type": "string"
									},
									"sku": {
										"type": "object",
										"properties": {
											"name": {
												"type": "string"
											},
											"tier": {
												"type": "string"
											},
											"capacity": {
												"type": "integer"
											}
										}
									},
									"kind": {
										"type": "string"
									},
									"properties": {
										"type": "object",
										"properties": {
											"collation": {
												"type": "string"
											},
											"maxSizeBytes": {
												"type": "integer"
											},
											"catalogCollation": {
												"type": "string"
											},
											"readScale": {
												"type": "string"
											},
											"readReplicaCount": {
												"type": "integer"
											},
											"storageAccountType": {
												"type": "string"
											}
										}
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/cglhlinkedservice_Source_Blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ParquetDataSetForCGLHSRCSource')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "cglhlinkedservice_Source_Blob",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "2020/ParquetToLoadInSQLTable_v1",
						"container": "cglhsrc"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/cglhlinkedservice_Source_Blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Connection to your source data store.",
				"linkedServiceName": {
					"referenceName": "AzureSourceBlob",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"fileName": {
						"type": "string"
					},
					"SourceContainer": {
						"type": "string"
					},
					"SourceDirectory": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().SourceDirectory",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().SourceContainer",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSourceBlob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_1v9')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServercglh",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "AccountKey",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "ParentAccountKey",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "AccountCodeAlternateKey",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "ParentAccountCodeAlternateKey",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "AccountDescription",
						"type": "nvarchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "AccountType",
						"type": "nvarchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Operator",
						"type": "nvarchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "CustomMembers",
						"type": "nvarchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "ValueType",
						"type": "nvarchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "CustomMemberOptions",
						"type": "nvarchar",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DimAccount"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlServercglh')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_1vt')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "dbo.FactSalesQuota.json",
						"container": "cglhcontainer"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"SalesQuotaKey": {
							"type": "integer"
						},
						"EmployeeKey": {
							"type": "integer"
						},
						"DateKey": {
							"type": "integer"
						},
						"CalendarYear": {
							"type": "integer"
						},
						"CalendarQuarter": {
							"type": "integer"
						},
						"SalesAmountQuota": {
							"type": "number"
						},
						"Date": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_2lq')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServercglh",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "CustomerKey",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "GeographyKey",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "CustomerAlternateKey",
						"type": "nvarchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Title",
						"type": "nvarchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "FirstName",
						"type": "nvarchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "MiddleName",
						"type": "nvarchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "AddressLine1",
						"type": "nvarchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "AddressLine2",
						"type": "nvarchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Phone",
						"type": "nvarchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "DateFirstPurchase",
						"type": "date",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "CommuteDistance",
						"type": "nvarchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "FrenchEducation",
						"type": "nvarchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "EnglishOccupation",
						"type": "nvarchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "SpanishOccupation",
						"type": "nvarchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "FrenchOccupation",
						"type": "nvarchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "HouseOwnerFlag",
						"type": "nchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "NumberCarsOwned",
						"type": "tinyint",
						"precision": 3,
						"scale": 0
					},
					{
						"name": "EmailAddress",
						"type": "nvarchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "YearlyIncome",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "TotalChildren",
						"type": "tinyint",
						"precision": 3,
						"scale": 0
					},
					{
						"name": "NumberChildrenAtHome",
						"type": "tinyint",
						"precision": 3,
						"scale": 0
					},
					{
						"name": "EnglishEducation",
						"type": "nvarchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "SpanishEducation",
						"type": "nvarchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "LastName",
						"type": "nvarchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "NameStyle",
						"type": "bit",
						"precision": 1,
						"scale": 0
					},
					{
						"name": "BirthDate",
						"type": "date",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "MaritalStatus",
						"type": "nchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Suffix",
						"type": "nvarchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Gender",
						"type": "nvarchar",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DimCustomer"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlServercglh')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_2ty')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServercglh",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "SalesQuotaKey",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "EmployeeKey",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "DateKey",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "CalendarYear",
						"type": "smallint",
						"precision": 5,
						"scale": 0
					},
					{
						"name": "CalendarQuarter",
						"type": "tinyint",
						"precision": 3,
						"scale": 0
					},
					{
						"name": "SalesAmountQuota",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Factsalesquotapost"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlServercglh')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_4ph')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "cglhSourceLocation",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "2020",
						"container": "cglhcontainer"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/cglhSourceLocation')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_5qz')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServercglh",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "SalesQuotaKey",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "EmployeeKey",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "DateKey",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "CalendarYear",
						"type": "smallint",
						"precision": 5,
						"scale": 0
					},
					{
						"name": "CalendarQuarter",
						"type": "tinyint",
						"precision": 3,
						"scale": 0
					},
					{
						"name": "SalesAmountQuota",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "FactSalesQuota"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlServercglh')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_85c')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "loadblobtotable_new",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "FBI_Configuration"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/loadblobtotable_new')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_8e4')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage_csvtosql",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "FL_insurance_sample.csv",
						"container": "cglhcontainer"
					},
					"columnDelimiter": ",",
					"rowDelimiter": "\r",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "policyID",
						"type": "String"
					},
					{
						"name": "statecode",
						"type": "String"
					},
					{
						"name": "county",
						"type": "String"
					},
					{
						"name": "eq_site_limit",
						"type": "String"
					},
					{
						"name": "hu_site_limit",
						"type": "String"
					},
					{
						"name": "fl_site_limit",
						"type": "String"
					},
					{
						"name": "fr_site_limit",
						"type": "String"
					},
					{
						"name": "tiv_2011",
						"type": "String"
					},
					{
						"name": "tiv_2012",
						"type": "String"
					},
					{
						"name": "eq_site_deductible",
						"type": "String"
					},
					{
						"name": "hu_site_deductible",
						"type": "String"
					},
					{
						"name": "fl_site_deductible",
						"type": "String"
					},
					{
						"name": "fr_site_deductible",
						"type": "String"
					},
					{
						"name": "point_latitude",
						"type": "String"
					},
					{
						"name": "point_longitude",
						"type": "String"
					},
					{
						"name": "line",
						"type": "String"
					},
					{
						"name": "construction",
						"type": "String"
					},
					{
						"name": "point_granularity",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage_csvtosql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_906')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "cglh_adf_to_blob_linkedservice",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "cglhsrc"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/cglh_adf_to_blob_linkedservice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_d1w')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "cglh_adf_to_blob_linkedservice",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "cglhsrc"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"$schema": {
							"type": "string"
						},
						"contentVersion": {
							"type": "string"
						},
						"parameters": {
							"type": "object",
							"properties": {
								"servers_cgpocdbserverdbrscala_name": {
									"type": "object",
									"properties": {
										"defaultValue": {
											"type": "string"
										},
										"type": {
											"type": "string"
										}
									}
								}
							}
						},
						"variables": {
							"type": "object"
						},
						"resources": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"type": {
										"type": "string"
									},
									"apiVersion": {
										"type": "string"
									},
									"name": {
										"type": "string"
									},
									"location": {
										"type": "string"
									},
									"sku": {
										"type": "object",
										"properties": {
											"name": {
												"type": "string"
											},
											"tier": {
												"type": "string"
											},
											"capacity": {
												"type": "integer"
											}
										}
									},
									"kind": {
										"type": "string"
									},
									"properties": {
										"type": "object",
										"properties": {
											"collation": {
												"type": "string"
											},
											"maxSizeBytes": {
												"type": "integer"
											},
											"catalogCollation": {
												"type": "string"
											},
											"readScale": {
												"type": "string"
											},
											"readReplicaCount": {
												"type": "integer"
											},
											"storageAccountType": {
												"type": "string"
											}
										}
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/cglh_adf_to_blob_linkedservice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_e7f')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServercglh",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "SalesQuotaKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "EmployeeKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DateKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CalendarYear",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "CalendarQuarter",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "SalesAmountQuota",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Factsalesquotapost"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlServercglh')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_gwe')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "cglhlinkedservice_SourceBlob",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "2020/07/01",
						"container": "cglhsrc"
					},
					"columnDelimiter": ",",
					"rowDelimiter": "\n",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "id",
						"type": "String"
					},
					{
						"name": "contentVersion",
						"type": "String"
					},
					{
						"name": "Column_Name",
						"type": "String"
					},
					{
						"name": "Source_Value",
						"type": "String"
					},
					{
						"name": "Target_Value",
						"type": "String"
					},
					{
						"name": "Comments",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/cglhlinkedservice_SourceBlob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_i1h')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServercglh",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "AccountKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ParentAccountKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AccountCodeAlternateKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ParentAccountCodeAlternateKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AccountDescription",
						"type": "nvarchar"
					},
					{
						"name": "AccountType",
						"type": "nvarchar"
					},
					{
						"name": "Operator",
						"type": "nvarchar"
					},
					{
						"name": "CustomMembers",
						"type": "nvarchar"
					},
					{
						"name": "ValueType",
						"type": "nvarchar"
					},
					{
						"name": "CustomMemberOptions",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DimAccount"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlServercglh')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_i8e')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "cglhlinkedservicenew",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_table": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().cw_table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/cglhlinkedservicenew')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_ig5')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServercglh",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "Factsalesquotapost"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlServercglh')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_ntp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServercglh",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "SalesQuotaKey",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "EmployeeKey",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "DateKey",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "CalendarYear",
						"type": "smallint",
						"precision": 5,
						"scale": 0
					},
					{
						"name": "CalendarQuarter",
						"type": "tinyint",
						"precision": 3,
						"scale": 0
					},
					{
						"name": "SalesAmountQuota",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "FactSalesQuota"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlServercglh')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_omk')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServercglh",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "SalesQuotaKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "EmployeeKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DateKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CalendarYear",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "CalendarQuarter",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "SalesAmountQuota",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "FactSalesQuota"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlServercglh')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_oxk')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServercglh",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "Factsalesquotapost"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlServercglh')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_p2c')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage_csvtosql",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "FL_insurance_sample.csv",
						"container": "cglhcontainer"
					},
					"columnDelimiter": ",",
					"rowDelimiter": "\r",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage_csvtosql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_py1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "cglh_sqlserverpost",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "SalesQuotaKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "EmployeeKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DateKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CalendarYear",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "CalendarQuarter",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "SalesAmountQuota",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Factsalesquotapost"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/cglh_sqlserverpost')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_q1d')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServercglh",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "FactSalesQuota"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlServercglh')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_ta5')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServercglh",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "SalesQuotaKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "EmployeeKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DateKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CalendarYear",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "CalendarQuarter",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "SalesAmountQuota",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "FactSalesQuota"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlServercglh')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_tme')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServercglh",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "SalesQuotaKey",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "EmployeeKey",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "DateKey",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "CalendarYear",
						"type": "smallint",
						"precision": 5,
						"scale": 0
					},
					{
						"name": "CalendarQuarter",
						"type": "tinyint",
						"precision": 3,
						"scale": 0
					},
					{
						"name": "SalesAmountQuota",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Factsalesquotapost"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlServercglh')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/az_cglhsrc_path')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "cglhlinkedservice_Source_Blob",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "cglhsrc"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/cglhlinkedservice_Source_Blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/az_chlhtarget_path')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "cglhlinkedservice_Source_Blob",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"TargetPath": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@dataset().TargetPath",
							"type": "Expression"
						},
						"container": "cglhtgt"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/cglhlinkedservice_Source_Blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/az_metadaa_folder')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "az_meta_csv_linkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "cglhsrc"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ID",
						"type": "String"
					},
					{
						"name": "Age",
						"type": "String"
					},
					{
						"name": "Experience",
						"type": "String"
					},
					{
						"name": "Income",
						"type": "String"
					},
					{
						"name": "ZIP_Code",
						"type": "String"
					},
					{
						"name": "Family",
						"type": "String"
					},
					{
						"name": "CCAvg",
						"type": "String"
					},
					{
						"name": "Education",
						"type": "String"
					},
					{
						"name": "Mortgage",
						"type": "String"
					},
					{
						"name": "Personal_Loan",
						"type": "String"
					},
					{
						"name": "Securities_Account",
						"type": "String"
					},
					{
						"name": "CD_Account",
						"type": "String"
					},
					{
						"name": "Online",
						"type": "String"
					},
					{
						"name": "CreditCard",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/az_meta_csv_linkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/az_sql_table')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Age",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Experience",
						"type": "int",
						"precision": 10
					},
					{
						"name": "income",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ZIP_Code",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Family",
						"type": "varchar"
					},
					{
						"name": "CCAvg",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Education",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Mortgage",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Personal_Loan",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Securities_Account",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CD_Account",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Online",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CreditCard",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Parameters"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/cglhlinkedservice_SourceBlob')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "cglhlinkedservice_SourceBlob",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "cglhcontainer"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/cglhlinkedservice_SourceBlob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/cglhlinkedservice_TargetBlob')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "cglhlinkedservice_Target_BLOB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "clghtarget"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/cglhlinkedservice_Target_BLOB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/cglhsrc1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "cglhlinkedservice_Source_Blob",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"EnterSourcePath": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": {
							"value": "@dataset().EnterSourcePath",
							"type": "Expression"
						}
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/cglhlinkedservice_Source_Blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/cglhtable_onpremtoazure')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServercglh",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlServercglh')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/cglhttgt1_dataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "cglhlinkedservice_Source_Blob",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"EnterTargetPath": {
						"type": "string"
					},
					"EnterTargetFolder": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@dataset().EnterTargetFolder",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().EnterTargetPath",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/cglhlinkedservice_Source_Blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AZ_CGLHDB_LinkedService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AZ_CGLHDB_LinkedService_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage2_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage_csvtosql')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage_csvtosql_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage_pre')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage_pre_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricks1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-4251507692622460.0.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('AzureDatabricks1_accessToken')]"
					},
					"newClusterNodeType": "Standard_DS3_v2",
					"newClusterNumOfWorker": "1",
					"newClusterVersion": "6.4.x-scala2.11"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSourceBlob')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureSourceBlob_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureSourceBlob_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase_csvtosql')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase_csvtosql_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase_forBlobdump')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase_forBlobdump_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDumpDB_LS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDumpDB_LS_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureStorageLinkedService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureStorageLinkedService_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServercglh')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('SqlServercglh_connectionString')]",
					"userName": "[parameters('SqlServercglh_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('SqlServercglh_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/az_meta_csv_linkedService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('az_meta_csv_linkedService_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/az_sql')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('az_sql_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/blob_pre')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('blob_pre_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/cglhADFtoDatabricks')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-2023844594904065.5.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('cglhADFtoDatabricks_accessToken')]"
					},
					"newClusterNodeType": "Standard_DS3_v2",
					"newClusterNumOfWorker": "1",
					"newClusterVersion": "6.4.x-scala2.11"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/cglhSourceLocation')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('cglhSourceLocation_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/cglhTargetLocation')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('cglhTargetLocation_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/cglh_adf_to_blob_linkedservice')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('cglh_adf_to_blob_linkedservice_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/cglh_azuresqldatabase')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('cglh_azuresqldatabase_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/cglh_sqlserverpost')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('cglh_sqlserverpost_connectionString')]",
					"userName": "[parameters('cglh_sqlserverpost_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('cglh_sqlserverpost_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/cglh_src_adf_pipeline_linkedservice')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Linked service for source container",
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('cglh_src_adf_pipeline_linkedservice_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/cglh_trg_adf_pipeline_linkedservice')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Linked service for Target Container",
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('cglh_trg_adf_pipeline_linkedservice_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/cglhlinkedservice')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('cglhlinkedservice_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/cglhlinkedservice_SourceBlob')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('cglhlinkedservice_SourceBlob_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/cglhlinkedservice_Source_Blob')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "dataset",
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('cglhlinkedservice_Source_Blob_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/cglhlinkedservice_TargetBlob')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('cglhlinkedservice_TargetBlob_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/cglhlinkedservice_Target_BLOB')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('cglhlinkedservice_Target_BLOB_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/cglhlinkedservice_json')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-2023844594904065.5.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('cglhlinkedservice_json_accessToken')]"
					},
					"existingClusterId": "0726-154512-chit728"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/cglhlinkedservice_json3')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-2023844594904065.5.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('cglhlinkedservice_json3_accessToken')]"
					},
					"newClusterNodeType": "Standard_DS3_v2",
					"newClusterNumOfWorker": "1",
					"newClusterVersion": "6.4.x-hls-scala2.11"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/cglhlinkedservicenew')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('cglhlinkedservicenew_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/linkedservice_source_blob')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('linkedservice_source_blob_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/loadblobtosql_blobnew')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('loadblobtosql_blobnew_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/loadblobtotable_databricks')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-3459637556007151.11.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('loadblobtotable_databricks_accessToken')]"
					},
					"newClusterNodeType": "Standard_DS3_v2",
					"newClusterNumOfWorker": "1",
					"newClusterVersion": "6.4.x-scala2.11"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/loadblobtotable_new')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('loadblobtotable_new_connectionString')]",
					"userName": "[parameters('loadblobtotable_new_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('loadblobtotable_new_password')]"
					}
				},
				"connectVia": {
					"referenceName": "integrationRuntimepoc",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntimepoc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/onpremtosql')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('onpremtosql_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/prepostdatabricks_linkedservice')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-3273739657996690.10.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('prepostdatabricks_linkedservice_accessToken')]"
					},
					"newClusterNodeType": "Standard_DS3_v2",
					"newClusterNumOfWorker": "2",
					"newClusterVersion": "5.5.x-scala2.11"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Trigger_gwe')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "CopyPipeline_toSql",
						"type": "PipelineReference"
					},
					"parameters": {}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Hour",
					"interval": 24,
					"startTime": "2020-08-17T12:15:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/CopyPipeline_toSql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntimepoc')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		}
	]
}